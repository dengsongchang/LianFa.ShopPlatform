<?xml version="1.0"?>
<doc>
    <assembly>
        <name>HuCheng.Util.Core</name>
    </assembly>
    <members>
        <member name="T:HuCheng.Util.Core.Caches.ICacheManager">
            <summary>
            缓存管理器
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Caches.ICacheManager.Get``1(System.String)">
            <summary>
            获得指定键的缓存值
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="key">缓存键</param>
            <returns>缓存值</returns>
        </member>
        <member name="M:HuCheng.Util.Core.Caches.ICacheManager.Set(System.String,System.Object)">
            <summary>
            将指定键的对象添加到缓存中
            </summary>
            <param name="key">缓存键</param>
            <param name="data">缓存值</param>
        </member>
        <member name="M:HuCheng.Util.Core.Caches.ICacheManager.Set(System.String,System.Object,System.Int32)">
            <summary>
            将指定键的对象添加到缓存中，并指定过期时间
            </summary>
            <param name="key">缓存键</param>
            <param name="data">缓存值</param>
            <param name="cacheTime">缓存过期时间</param>
        </member>
        <member name="M:HuCheng.Util.Core.Caches.ICacheManager.IsSet(System.String)">
            <summary>
            获取指定键是否已设置缓存
            </summary>
            <param name="key">key</param>
            <returns>Result</returns>
        </member>
        <member name="M:HuCheng.Util.Core.Caches.ICacheManager.Remove(System.String)">
            <summary>
            从缓存中移除指定键的缓存值
            </summary>
            <param name="key">缓存键</param>
        </member>
        <member name="M:HuCheng.Util.Core.Caches.ICacheManager.RemoveByPattern(System.String)">
            <summary>
            根据模式移除指定缓存值
            </summary>
            <param name="pattern">表达式</param>
        </member>
        <member name="M:HuCheng.Util.Core.Caches.ICacheManager.Clear">
            <summary>
            清空所有缓存对象
            </summary>
        </member>
        <member name="T:HuCheng.Util.Core.Compress.GZip">
            <summary>
            GZip压缩
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Compress.GZip.Compress(System.String)">
            <summary>
            压缩
            </summary>
            <param name="text">文本</param>
        </member>
        <member name="M:HuCheng.Util.Core.Compress.GZip.Decompress(System.String)">
            <summary>
            解压缩
            </summary>
            <param name="text">文本</param>
        </member>
        <member name="M:HuCheng.Util.Core.Compress.GZip.Compress(System.Byte[])">
            <summary>
            压缩
            </summary>
            <param name="buffer">字节流</param>
        </member>
        <member name="M:HuCheng.Util.Core.Compress.GZip.Decompress(System.Byte[])">
            <summary>
            解压缩
            </summary>
            <param name="buffer">字节流</param>
        </member>
        <member name="M:HuCheng.Util.Core.Compress.GZip.Compress(System.IO.Stream)">
            <summary>
            压缩
            </summary>
            <param name="stream">流</param>
        </member>
        <member name="M:HuCheng.Util.Core.Compress.GZip.Decompress(System.IO.Stream)">
            <summary>
            解压缩
            </summary>
            <param name="stream">流</param>
        </member>
        <member name="T:HuCheng.Util.Core.Compress.ICompress">
            <summary>
            压缩
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Compress.ICompress.Password(System.String)">
            <summary>
            设置密码
            </summary>
            <param name="password">密码</param>
        </member>
        <member name="M:HuCheng.Util.Core.Compress.ICompress.AddDirectory(System.String[])">
            <summary>
            添加源目录,用于压缩或解压缩
            </summary>
            <param name="fromDirectory">源目录绝对路径</param>
        </member>
        <member name="M:HuCheng.Util.Core.Compress.ICompress.AddFile(System.String[])">
            <summary>
            添加源文件,用于压缩或解压缩
            </summary>
            <param name="fromPath">源文件绝对路径</param>
        </member>
        <member name="M:HuCheng.Util.Core.Compress.ICompress.Compress(System.String,System.String)">
            <summary>
            压缩文件
            </summary>
            <param name="toDirectory">压缩到该目录</param>
            <param name="toFileName">压缩文件名，不带扩展名，自动添加.zip扩展名</param>
        </member>
        <member name="M:HuCheng.Util.Core.Compress.ICompress.Decompress(System.String)">
            <summary>
            解压缩文件
            </summary>
            <param name="toDirectory">解压到该目录</param>
        </member>
        <member name="T:HuCheng.Util.Core.Config.IConfigManager">
            <summary>
            互诚配置文件管理接口
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Config.IConfigManager.ReadConfig(System.String,System.String)">
            <summary>
            读取配置值,自动根据配置文件修改情况缓存
            </summary>
            <param name="configFileName">配置文件名，如：host</param>
            <param name="configPath">配置节路径，如：configuration/HostBaseUrl</param>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Config.IConfigManager.ReadConfigList(System.String,System.String)">
            <summary>
            读取配置列表值,自动根据配置文件修改情况缓存
            </summary>
            <param name="configFileName">配置文件名，如：host</param>
            <param name="configPath">配置节路径，如：configuration/HostBaseUrl</param>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Config.IConfigManager.WriteConfig(System.String,System.String,System.String)">
            <summary>
            修改配置信息
            </summary>
            <param name="configFileName">配置文件名，如：host</param>
            <param name="configPath">配置节路径，如：configuration/HostBaseUrl</param>
            <param name="value">写入配置的值</param>
            <returns></returns>
        </member>
        <member name="T:HuCheng.Util.Core.Datas.Queries.QueryHelper">
            <summary>
            查询操作
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Datas.Queries.QueryHelper.ValidatePredicate``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            验证谓词，无效返回null
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="predicate">谓词</param>
        </member>
        <member name="T:HuCheng.Util.Core.Datas.Repositories.IPager">
            <summary>
            分页
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.Datas.Repositories.IPager.Page">
            <summary>
            页数，即第几页，从1开始
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.Datas.Repositories.IPager.PageSize">
            <summary>
            每页显示行数
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.Datas.Repositories.IPager.TotalCount">
            <summary>
            总行数
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.Datas.Repositories.IPager.PageCount">
            <summary>
            总页数
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.Datas.Repositories.IPager.SkipCount">
            <summary>
            跳过的行数
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.Datas.Repositories.IPager.Order">
            <summary>
            排序条件
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.Datas.Repositories.IPager.StartNumber">
            <summary>
            起始行数
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.Datas.Repositories.IPager.EndNumber">
            <summary>
            结束行数
            </summary>
        </member>
        <member name="T:HuCheng.Util.Core.Datas.Repositories.IRepository`1">
            <summary>
            仓储
            </summary>
            <typeparam name="T">实体类型</typeparam>
        </member>
        <member name="M:HuCheng.Util.Core.Datas.Repositories.IRepository`1.Add(`0)">
            <summary>
            添加实体
            </summary>
            <param name="entity">实体</param>
        </member>
        <member name="M:HuCheng.Util.Core.Datas.Repositories.IRepository`1.BatchAdd(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            批量添加
            </summary>
            <param name="entities">实体列表</param>
        </member>
        <member name="M:HuCheng.Util.Core.Datas.Repositories.IRepository`1.Update(`0)">
            <summary>
            更新实体
            </summary>
            <param name="entity">实体</param>
        </member>
        <member name="M:HuCheng.Util.Core.Datas.Repositories.IRepository`1.BatchUpdate(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            批量更新
            </summary>
            <param name="entities">实体列表</param>
        </member>
        <member name="M:HuCheng.Util.Core.Datas.Repositories.IRepository`1.BatchUpdate(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,`0}})">
            <summary>
            批量更新实体列表(推荐)
            </summary>
            <param name="whereLambda">查询条件</param>
            <param name="updateExpression">更新表达式</param>
            <returns>返回影响条数</returns>
        </member>
        <member name="M:HuCheng.Util.Core.Datas.Repositories.IRepository`1.Delete(`0)">
            <summary>
            删除实体
            </summary>
            <param name="entity">实体</param>
        </member>
        <member name="M:HuCheng.Util.Core.Datas.Repositories.IRepository`1.Delete(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            根据查询条件删除
            </summary>
            <param name="whereLambda">查询条件</param>
        </member>
        <member name="M:HuCheng.Util.Core.Datas.Repositories.IRepository`1.BatchDelete(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            批量删除
            </summary>
            <param name="entities">实体列表</param>
        </member>
        <member name="M:HuCheng.Util.Core.Datas.Repositories.IRepository`1.BatchDelete(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            根据查询条件批量删除(推荐)
            </summary>
            <param name="whereLambda">查询条件</param>
        </member>
        <member name="M:HuCheng.Util.Core.Datas.Repositories.IRepository`1.GetById(System.Object)">
            <summary>
            根据Id获取实体
            </summary>
            <param name="id">Id</param>
            <returns>实体</returns>
        </member>
        <member name="M:HuCheng.Util.Core.Datas.Repositories.IRepository`1.Get(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            根据查询条件获取单条实体数据
            </summary>
            <param name="whereLambda">查询条件</param>
            <returns>实体</returns>
        </member>
        <member name="M:HuCheng.Util.Core.Datas.Repositories.IRepository`1.GetAll">
            <summary>
            获取所有实体
            </summary>
            <returns>实体列表</returns>
        </member>
        <member name="M:HuCheng.Util.Core.Datas.Repositories.IRepository`1.GetList(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            根据查询条件获取实体列表
            </summary>
            <param name="whereLambda">查询条件</param>
            <returns>实体列表</returns>
        </member>
        <member name="M:HuCheng.Util.Core.Datas.Repositories.IRepository`1.LoadEntitiesNoTracking(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            根据查询条件获取实体(返回IQueryable)
            </summary>
            <param name="whereLambda">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Datas.Repositories.IRepository`1.LoadTopEntitiesNoTracking``1(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Int32,System.Boolean)">
            <summary>
            根据查询条件获取前几条实体数据(返回IQueryable)
            </summary>
            <typeparam name="TS">泛型</typeparam>
            <param name="whereLambda">查询条件</param>
            <param name="orderbyLambda">排序条件</param>
            <param name="topList">前几条数据数量</param>
            <param name="isAsc">是否升序</param>
            <returns>实体列表</returns>
        </member>
        <member name="M:HuCheng.Util.Core.Datas.Repositories.IRepository`1.Exist(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            根据查询条件实体判断是否存在
            </summary>
            <param name="whereLambda">查询条件</param>
            <returns>true-存在,false-不存在</returns>
        </member>
        <member name="M:HuCheng.Util.Core.Datas.Repositories.IRepository`1.LoadPageEntities``1(System.Int32,System.Int32,System.Int32@,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            根据查询条件分页获取实体数据(返回IQueryable)
            </summary>
            <typeparam name="TS">泛型</typeparam>
            <param name="pageSize">每页数量(页大小)</param>
            <param name="pageIndex">页数(第几页)</param>
            <param name="total">总数</param>
            <param name="whereLambda">查询条件</param>
            <param name="orderbyLambda">排序条件</param>
            <param name="isAsc">是否升序</param>
            <returns>实体分页列表</returns>
        </member>
        <member name="M:HuCheng.Util.Core.Datas.Repositories.IRepository`1.PagerQuery(System.Linq.IQueryable{`0},System.Int32,System.Int32)">
            <summary>
            分页查询
            </summary>
            <param name="query">查询对象</param>
            <param name="page">页索引，表示第几页，从1开始</param>
            <param name="pageSize">每页显示行数，默认20</param>
        </member>
        <member name="M:HuCheng.Util.Core.Datas.Repositories.IRepository`1.Count(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            获取实体个数
            </summary>
            <param name="predicate">条件</param>
        </member>
        <member name="M:HuCheng.Util.Core.Datas.Repositories.IRepository`1.Clear">
            <summary>
            清空实体
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Datas.Repositories.IRepository`1.ClearCache">
            <summary>
            清空缓存
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Datas.Repositories.IRepository`1.GetUnitOfWork">
            <summary>
            获取工作单元
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Datas.Repositories.IRepository`1.GetDbSetNoTracking">
            <summary>
            Get DbSet(不追踪)
            </summary>
            <returns>DbSet</returns>
        </member>
        <member name="T:HuCheng.Util.Core.Datas.Repositories.PageModel">
            <summary>
            分页模型
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.Datas.Repositories.PageModel.PageIndex">
            <summary>
            页索引，即第几页，从1开始
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.Datas.Repositories.PageModel.PageSize">
            <summary>
            每页显示行数
            </summary>
        </member>
        <member name="T:HuCheng.Util.Core.Datas.Repositories.Pager">
            <summary>
            分页
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Datas.Repositories.Pager.#ctor">
            <summary>
            初始化分页
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Datas.Repositories.Pager.#ctor(System.Int32,System.Int32,System.String)">
            <summary>
            初始化分页
            </summary>
            <param name="page">页索引</param>
            <param name="pageSize">每页显示行数,默认20</param> 
            <param name="order">排序条件</param>
        </member>
        <member name="M:HuCheng.Util.Core.Datas.Repositories.Pager.#ctor(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            初始化分页
            </summary>
            <param name="page">页索引</param>
            <param name="pageSize">每页显示行数,默认20</param> 
            <param name="totalCount">总行数</param>
            <param name="order">排序条件</param>
        </member>
        <member name="P:HuCheng.Util.Core.Datas.Repositories.Pager.Page">
            <summary>
            页索引，即第几页，从1开始
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.Datas.Repositories.Pager.PageSize">
            <summary>
            每页显示行数
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.Datas.Repositories.Pager.TotalCount">
            <summary>
            总行数
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.Datas.Repositories.Pager.PageCount">
            <summary>
            总页数
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.Datas.Repositories.Pager.SkipCount">
            <summary>
            跳过的行数
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.Datas.Repositories.Pager.Order">
            <summary>
            排序条件
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.Datas.Repositories.Pager.StartNumber">
            <summary>
            起始行数
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.Datas.Repositories.Pager.EndNumber">
            <summary>
            结束行数
            </summary>
        </member>
        <member name="T:HuCheng.Util.Core.Datas.Repositories.PagerList`1">
            <summary>
            分页集合
            </summary>
            <typeparam name="T">元素类型</typeparam>
        </member>
        <member name="M:HuCheng.Util.Core.Datas.Repositories.PagerList`1.#ctor(HuCheng.Util.Core.Datas.Repositories.IPager)">
            <summary>
            分页集合
            </summary>
            <param name="pager">查询对象</param>
        </member>
        <member name="M:HuCheng.Util.Core.Datas.Repositories.PagerList`1.#ctor(System.Int32)">
            <summary>
            分页集合
            </summary>
            <param name="totalCount">总行数</param>
        </member>
        <member name="M:HuCheng.Util.Core.Datas.Repositories.PagerList`1.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            分页集合
            </summary>
            <param name="page">页索引</param>
            <param name="pageSize">每页显示行数</param>
            <param name="totalCount">总行数</param>
        </member>
        <member name="M:HuCheng.Util.Core.Datas.Repositories.PagerList`1.#ctor(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            分页集合
            </summary>
            <param name="page">页索引</param>
            <param name="pageSize">每页显示行数</param>
            <param name="totalCount">总行数</param>
            <param name="order">排序条件</param>
        </member>
        <member name="P:HuCheng.Util.Core.Datas.Repositories.PagerList`1.Page">
            <summary>
            页索引，即第几页，从1开始
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.Datas.Repositories.PagerList`1.PageSize">
            <summary>
            每页显示行数
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.Datas.Repositories.PagerList`1.TotalCount">
            <summary>
            总行数
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.Datas.Repositories.PagerList`1.PageCount">
            <summary>
            总页数
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.Datas.Repositories.PagerList`1.Order">
            <summary>
            排序条件
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Datas.Repositories.PagerList`1.Convert``1(System.Func{`0,``0})">
            <summary>
            转换分页集合的元素类型
            </summary>
            <typeparam name="TResult">目标元素类型</typeparam>
            <param name="converter">转换方法</param>
        </member>
        <member name="T:HuCheng.Util.Core.Datas.IUnitOfWork">
            <summary>
            工作单元
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Datas.IUnitOfWork.Commit(System.Boolean)">
            <summary>
            提交事务
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Datas.IUnitOfWork.CommitAsync(System.Boolean)">
            <summary>
            异步提交事务
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Datas.IUnitOfWork.ExecuteSqlCommand(System.String,System.Object[])">
            <summary>
            执行Sql命令(非查询)
            </summary>
            <param name="sql">sql</param>
            <param name="parameters">参数</param>
            <returns>影响条数</returns>
        </member>
        <member name="M:HuCheng.Util.Core.Datas.IUnitOfWork.SqlQuery``1(System.String,System.Object[])">
            <summary>
            执行sql查询
            </summary>
            <typeparam name="TResult">实体类型</typeparam>
            <param name="sql">sql</param>
            <param name="parameters">参数</param>
            <returns>实体列表</returns>
        </member>
        <member name="M:HuCheng.Util.Core.Datas.IUnitOfWork.SqlQueryResult``1(System.String,System.Object[])">
            <summary>
            执行sql查询
            </summary>
            <typeparam name="TResult">实体类型</typeparam>
            <param name="sql">sql</param>
            <param name="parameters">参数</param>
            <returns>实体列表</returns>
        </member>
        <member name="T:HuCheng.Util.Core.Enums.Const">
            <summary>
            常量
            </summary>
        </member>
        <member name="F:HuCheng.Util.Core.Enums.Const.ChinesePinYin">
            <summary>
            汉字及拼音首字母
            </summary>
        </member>
        <member name="F:HuCheng.Util.Core.Enums.Const.SimplifiedChinese">
            <summary>
            常用简体汉字
            </summary>
        </member>
        <member name="F:HuCheng.Util.Core.Enums.Const.Letters">
            <summary>
            英文字母
            </summary>
        </member>
        <member name="F:HuCheng.Util.Core.Enums.Const.Numbers">
            <summary>
            数字
            </summary>
        </member>
        <member name="T:HuCheng.Util.Core.Enums.Enuming">
            <summary>
            枚举操作
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Enums.Enuming.GetInstance``1(System.Object)">
            <summary>
            获取实例
            </summary>
            <typeparam name="T">枚举</typeparam>
            <param name="member">成员名或值,
            范例:Enum1枚举有成员A=0,则传入"A"或"0"获取 Enum1.A</param>
        </member>
        <member name="M:HuCheng.Util.Core.Enums.Enuming.GetName``1(System.Object)">
            <summary>
            获取成员名
            </summary>
            <typeparam name="T">枚举</typeparam>
            <param name="member">成员名、值、实例均可,
            范例:Enum1枚举有成员A=0,则传入Enum1.A或0,获取成员名"A"</param>
        </member>
        <member name="M:HuCheng.Util.Core.Enums.Enuming.GetName(System.Type,System.Object)">
            <summary>
            获取成员名
            </summary>
            <param name="type">枚举类型</param>
            <param name="member">成员名、值、实例均可</param>
        </member>
        <member name="M:HuCheng.Util.Core.Enums.Enuming.GetValue``1(System.Object)">
            <summary>
            获取成员值
            </summary>
            <typeparam name="T">枚举</typeparam>
            <param name="member">成员名、值、实例均可，
            范例:Enum1枚举有成员A=0,可传入"A"、0、Enum1.A，获取值0</param>
        </member>
        <member name="M:HuCheng.Util.Core.Enums.Enuming.GetValue(System.Type,System.Object)">
            <summary>
            获取成员值
            </summary>
            <param name="type">枚举类型</param>
            <param name="member">成员名、值、实例均可</param>
        </member>
        <member name="M:HuCheng.Util.Core.Enums.Enuming.GetDescription``1(System.Object)">
            <summary>
            获取描述,使用System.ComponentModel.Description特性设置描述
            </summary>
            <typeparam name="T">枚举</typeparam>
            <param name="member">成员名、值、实例均可</param>
        </member>
        <member name="M:HuCheng.Util.Core.Enums.Enuming.GetDescription(System.Type,System.Object)">
            <summary>
            获取描述,使用System.ComponentModel.Description特性设置描述
            </summary>
            <param name="type">枚举类型</param>
            <param name="member">成员名、值、实例均可</param>
        </member>
        <member name="M:HuCheng.Util.Core.Enums.Enuming.ToDict(System.Type)">
            <summary>
            将一个枚举类型转化了[值:描述]字典
            </summary>
            <param name="enumType">枚举类型</param>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Enums.Enuming.GetSelectList(System.Type,System.Int32,System.Boolean)">
            <summary>
            获取枚举列表
            </summary>
            <param name="enumType">枚举类型</param>
            <param name="selectedValue">选择值</param>
            <param name="addDefault">是否加入默认选项</param>
            <returns></returns>
        </member>
        <member name="T:HuCheng.Util.Core.Enums.SelectListItem">
            <summary>
            SelectListItem
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.Enums.SelectListItem.Selected">
            <summary>
            获取或设置一个值，该值指示是否选择此项
            返回结果:如果选定此项，则为 true；否则为 false。
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.Enums.SelectListItem.Text">
            <summary>
            获取或设置选定项的文本
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.Enums.SelectListItem.Value">
            <summary>
            获取或设置选定项的值
            </summary>
        </member>
        <member name="T:HuCheng.Util.Core.Dependency.DependencyRegisterAttribute">
            <summary>
            指定是否启用自动注册
            </summary>
        </member>
        <member name="T:HuCheng.Util.Core.Exceptions.ConcurrencyException">
            <summary>
            并发异常
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Exceptions.ConcurrencyException.#ctor">
            <summary>
            初始化并发异常
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Exceptions.ConcurrencyException.#ctor(System.Exception)">
            <summary>
            初始化并发异常
            </summary>
            <param name="exception">异常</param>
        </member>
        <member name="M:HuCheng.Util.Core.Exceptions.ConcurrencyException.#ctor(System.String,System.Exception)">
            <summary>
            初始化并发异常
            </summary>
            <param name="message">错误消息</param>
            <param name="exception">异常</param>
        </member>
        <member name="M:HuCheng.Util.Core.Exceptions.ConcurrencyException.#ctor(System.String,System.Exception,System.String)">
            <summary>
            初始化并发异常
            </summary>
            <param name="message">错误消息</param>
            <param name="exception">异常</param>
            <param name="code">错误码</param>
        </member>
        <member name="M:HuCheng.Util.Core.Exceptions.ConcurrencyException.#ctor(System.String,System.Exception,System.String,HuCheng.Util.Core.Logs.LogLevel)">
            <summary>
            初始化并发异常
            </summary>
            <param name="message">错误消息</param>
            <param name="exception">异常</param>
            <param name="code">错误码</param>
            <param name="level">日志级别</param>
        </member>
        <member name="T:HuCheng.Util.Core.Exceptions.TokenException">
            <summary>
            Token异常
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Exceptions.TokenException.#ctor">
            <summary>
            无参数构造函数
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Exceptions.TokenException.#ctor(System.String)">
            <summary>
             带一个字符串参数的构造函数，作用：当程序员用Exception类获取异常信息而非 TokenException 时把自定义异常信息传递过去
            </summary>
            <param name="msg">自定义异常信息</param>
        </member>
        <member name="M:HuCheng.Util.Core.Exceptions.TokenException.#ctor(System.String,System.Exception)">
            <summary>
            带异常及字符串参数的构造函数，作用：当程序员用Exception类获取异常信息而非 TokenException 时把自定义异常信息传递过去
            </summary>
            <param name="msg"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:HuCheng.Util.Core.Exceptions.TokenException.GetError">
            <summary>
            获取错误
            </summary>
            <returns></returns>
        </member>
        <member name="T:HuCheng.Util.Core.Exceptions.Warning">
            <summary>
            应用程序异常
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Exceptions.Warning.#ctor(System.String)">
            <summary>
            初始化应用程序异常
            </summary>
            <param name="message">错误消息</param>
        </member>
        <member name="M:HuCheng.Util.Core.Exceptions.Warning.#ctor(System.String,System.String)">
            <summary>
            初始化应用程序异常
            </summary>
            <param name="message">错误消息</param>
            <param name="code">错误码</param>
        </member>
        <member name="M:HuCheng.Util.Core.Exceptions.Warning.#ctor(System.String,System.String,HuCheng.Util.Core.Logs.LogLevel)">
            <summary>
            初始化应用程序异常
            </summary>
            <param name="message">错误消息</param>
            <param name="code">错误码</param>
            <param name="level">日志级别</param>
        </member>
        <member name="M:HuCheng.Util.Core.Exceptions.Warning.#ctor(System.Exception)">
            <summary>
            初始化应用程序异常
            </summary>
            <param name="exception">异常</param>
        </member>
        <member name="M:HuCheng.Util.Core.Exceptions.Warning.#ctor(System.String,System.String,System.Exception)">
            <summary>
            初始化应用程序异常
            </summary>
            <param name="message">错误消息</param>
            <param name="code">错误码</param>
            <param name="exception">异常</param>
        </member>
        <member name="M:HuCheng.Util.Core.Exceptions.Warning.#ctor(System.String,System.String,HuCheng.Util.Core.Logs.LogLevel,System.Exception)">
            <summary>
            初始化应用程序异常
            </summary>
            <param name="message">错误消息</param>
            <param name="code">错误码</param>
            <param name="level">日志级别</param>
            <param name="exception">异常</param>
        </member>
        <member name="M:HuCheng.Util.Core.Exceptions.Warning.GetMessage">
            <summary>
            获取错误消息
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Exceptions.Warning.AppendSelfMessage(System.Text.StringBuilder)">
            <summary>
            添加本身消息
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Exceptions.Warning.AppendInnerMessage(System.Text.StringBuilder,System.Exception)">
            <summary>
            添加内部异常消息
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Exceptions.Warning.GetData(System.Exception)">
            <summary>
            获取添加的额外数据
            </summary>
        </member>
        <member name="F:HuCheng.Util.Core.Exceptions.Warning._message">
            <summary>
            错误消息
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.Exceptions.Warning.Message">
            <summary>
            错误消息
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.Exceptions.Warning.TraceId">
            <summary>
            跟踪号
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.Exceptions.Warning.Code">
            <summary>
            错误码
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.Exceptions.Warning.Level">
            <summary>
            日志级别
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.Exceptions.Warning.StackTrace">
            <summary>
            堆栈跟踪
            </summary>
        </member>
        <member name="T:HuCheng.Util.Core.Exports.ExportBase">
            <summary>
            导出
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Exports.ExportBase.#ctor(HuCheng.Util.Core.Exports.ExportFormat)">
            <summary>
            初始化导出
            </summary>
            <param name="format">导出格式</param>
        </member>
        <member name="F:HuCheng.Util.Core.Exports.ExportBase.Table">
            <summary>
            表
            </summary>
        </member>
        <member name="F:HuCheng.Util.Core.Exports.ExportBase._format">
            <summary>
            导出格式
            </summary>
        </member>
        <member name="F:HuCheng.Util.Core.Exports.ExportBase._headStyle">
            <summary>
            表头样式
            </summary>
        </member>
        <member name="F:HuCheng.Util.Core.Exports.ExportBase._bodyStyle">
            <summary>
            正文样式
            </summary>
        </member>
        <member name="F:HuCheng.Util.Core.Exports.ExportBase._footStyle">
            <summary>
            页脚样式
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Exports.ExportBase.ColumnWidth(System.Int32,System.Int32)">
            <summary>
            列宽
            </summary>
            <param name="columnIndex">列索引</param>
            <param name="width">宽度</param>
        </member>
        <member name="M:HuCheng.Util.Core.Exports.ExportBase.DateFormat(System.String)">
            <summary>
            设置日期格式
            </summary>
            <param name="format">日期格式，默认"yyyy-mm-dd"</param>
        </member>
        <member name="M:HuCheng.Util.Core.Exports.ExportBase.HeadStyle(HuCheng.Util.Core.Offices.CellStyle)">
            <summary>
            设置表头样式
            </summary>
            <param name="style">表头单元格样式</param>
        </member>
        <member name="M:HuCheng.Util.Core.Exports.ExportBase.GetHeadStyle">
            <summary>
            获取表头样式
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Exports.ExportBase.BodyStyle(HuCheng.Util.Core.Offices.CellStyle)">
            <summary>
            设置正文样式
            </summary>
            <param name="style">单元格样式</param>
        </member>
        <member name="M:HuCheng.Util.Core.Exports.ExportBase.GetBodyStyle">
            <summary>
            获取正文样式
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Exports.ExportBase.FootStyle(HuCheng.Util.Core.Offices.CellStyle)">
            <summary>
            设置页脚样式
            </summary>
            <param name="style">单元格样式</param>
        </member>
        <member name="M:HuCheng.Util.Core.Exports.ExportBase.GetFootStyle">
            <summary>
            获取页脚样式
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Exports.ExportBase.Head(System.String[])">
            <summary>
            添加表头
            </summary>
            <param name="titles">列标题</param>
        </member>
        <member name="M:HuCheng.Util.Core.Exports.ExportBase.Head(HuCheng.Util.Core.Offices.Cell[])">
            <summary>
            添加表头
            </summary>
            <param name="cells">表头</param>
        </member>
        <member name="M:HuCheng.Util.Core.Exports.ExportBase.Body``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            添加正文
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="list">实体集合</param>
        </member>
        <member name="M:HuCheng.Util.Core.Exports.ExportBase.Body``1(System.Collections.Generic.IEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object[]}})">
            <summary>
            添加正文
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="list">实体集合</param>
            <param name="propertiesExpression">属性表达式</param>
        </member>
        <member name="M:HuCheng.Util.Core.Exports.ExportBase.Body``1(System.Collections.Generic.IEnumerable{``0},System.String[])">
            <summary>
            添加正文
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="list">实体集合</param>
            <param name="propertyNames">属性列表</param>
        </member>
        <member name="M:HuCheng.Util.Core.Exports.ExportBase.AddEntity``1(``0,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            添加实体
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Exports.ExportBase.GetPropertyValues``1(``0,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            获取属性值集合
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Exports.ExportBase.AdjustColumnWidth``1(``0,System.String[])">
            <summary>
            调整列宽
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Exports.ExportBase.AdjustColumnWidth(System.Reflection.PropertyInfo,System.Int32)">
            <summary>
            调整列宽
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Exports.ExportBase.Foot(System.String[])">
            <summary>
            添加页脚
            </summary>
            <param name="values">值</param>
        </member>
        <member name="M:HuCheng.Util.Core.Exports.ExportBase.Foot(HuCheng.Util.Core.Offices.Cell[])">
            <summary>
            添加页脚
            </summary>
            <param name="cells">单元格集合</param>
        </member>
        <member name="M:HuCheng.Util.Core.Exports.ExportBase.Write(System.String,System.String)">
            <summary>
            写入文件
            </summary>
            <param name="directory">目录，不包括文件名</param>
            <param name="fileName">文件名，不包括扩展名</param>
        </member>
        <member name="M:HuCheng.Util.Core.Exports.ExportBase.GetFilePath(System.String,System.String)">
            <summary>
            获取文件路径
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Exports.ExportBase.GetFileName(System.String)">
            <summary>
            获取文件名
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Exports.ExportBase.WriteStream(System.IO.Stream)">
            <summary>
            写入流
            </summary>
            <param name="stream">流</param>
        </member>
        <member name="M:HuCheng.Util.Core.Exports.ExportBase.Download(System.String)">
            <summary>
            下载
            </summary>
            <param name="fileName">文件名，不包括扩展名</param>
        </member>
        <member name="M:HuCheng.Util.Core.Exports.ExportBase.Download(System.String,System.Text.Encoding)">
            <summary>
            下载
            </summary>
            <param name="fileName">文件名，不包括扩展名</param>
            <param name="encoding">字符编码</param>
        </member>
        <member name="T:HuCheng.Util.Core.Exports.ExportFormat">
            <summary>
            导出格式
            </summary>
        </member>
        <member name="F:HuCheng.Util.Core.Exports.ExportFormat.Xls">
            <summary>
            Excel 2003
            </summary>
        </member>
        <member name="F:HuCheng.Util.Core.Exports.ExportFormat.Xlsx">
            <summary>
            Excel 2007
            </summary>
        </member>
        <member name="T:HuCheng.Util.Core.Exports.IExport">
            <summary>
            文件导出
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Exports.IExport.DateFormat(System.String)">
            <summary>
            设置日期格式
            </summary>
            <param name="format">日期格式，默认"yyyy-mm-dd"</param>
        </member>
        <member name="M:HuCheng.Util.Core.Exports.IExport.ColumnWidth(System.Int32,System.Int32)">
            <summary>
            列宽
            </summary>
            <param name="columnIndex">列索引</param>
            <param name="width">宽度</param>
        </member>
        <member name="M:HuCheng.Util.Core.Exports.IExport.HeadStyle(HuCheng.Util.Core.Offices.CellStyle)">
            <summary>
            设置表头样式
            </summary>
            <param name="style">单元格样式</param>
        </member>
        <member name="M:HuCheng.Util.Core.Exports.IExport.BodyStyle(HuCheng.Util.Core.Offices.CellStyle)">
            <summary>
            设置正文样式
            </summary>
            <param name="style">单元格样式</param>
        </member>
        <member name="M:HuCheng.Util.Core.Exports.IExport.FootStyle(HuCheng.Util.Core.Offices.CellStyle)">
            <summary>
            设置页脚样式
            </summary>
            <param name="style">单元格样式</param>
        </member>
        <member name="M:HuCheng.Util.Core.Exports.IExport.Head(System.String[])">
            <summary>
            添加表头
            </summary>
            <param name="titles">列标题</param>
        </member>
        <member name="M:HuCheng.Util.Core.Exports.IExport.Head(HuCheng.Util.Core.Offices.Cell[])">
            <summary>
            添加表头
            </summary>
            <param name="cells">单元格集合</param>
        </member>
        <member name="M:HuCheng.Util.Core.Exports.IExport.Body``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            添加正文
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="list">实体集合</param>
        </member>
        <member name="M:HuCheng.Util.Core.Exports.IExport.Body``1(System.Collections.Generic.IEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object[]}})">
            <summary>
            添加正文
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="list">实体集合</param>
            <param name="propertiesExpression">属性列表表达式，范例：t => new object[]{t.A,t.B}</param>
        </member>
        <member name="M:HuCheng.Util.Core.Exports.IExport.Body``1(System.Collections.Generic.IEnumerable{``0},System.String[])">
            <summary>
            添加正文
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="list">实体集合</param>
            <param name="propertyNames">属性列表,范例："A","B"</param>
        </member>
        <member name="M:HuCheng.Util.Core.Exports.IExport.Foot(System.String[])">
            <summary>
            添加页脚
            </summary>
            <param name="values">值</param>
        </member>
        <member name="M:HuCheng.Util.Core.Exports.IExport.Foot(HuCheng.Util.Core.Offices.Cell[])">
            <summary>
            添加页脚
            </summary>
            <param name="cells">单元格集合</param>
        </member>
        <member name="M:HuCheng.Util.Core.Exports.IExport.Write(System.String,System.String)">
            <summary>
            写入文件
            </summary>
            <param name="directory">目录，不包括文件名</param>
            <param name="fileName">文件名，不包括扩展名</param>
        </member>
        <member name="M:HuCheng.Util.Core.Exports.IExport.Download(System.String)">
            <summary>
            下载
            </summary>
            <param name="fileName">文件名，不包括扩展名</param>
        </member>
        <member name="M:HuCheng.Util.Core.Exports.IExport.Download(System.String,System.Text.Encoding)">
            <summary>
            下载
            </summary>
            <param name="fileName">文件名，不包括扩展名</param>
            <param name="encoding">字符编码</param>
        </member>
        <member name="T:HuCheng.Util.Core.Exports.IExportFactory">
            <summary>
            文件导出操作工厂
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Exports.IExportFactory.Create(HuCheng.Util.Core.Exports.ExportFormat)">
            <summary>
            创建文件导出操作
            </summary>
            <param name="format">导出格式</param>
        </member>
        <member name="T:HuCheng.Util.Core.Extension.CacheExtensions">
            <summary>
            缓存扩展帮助类
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.CacheExtensions.Get``1(HuCheng.Util.Core.Caches.ICacheManager,System.String,System.Func{``0})">
            <summary>
            获得指定键的缓存值,不存在则添加到缓存中
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="cacheManager">缓存管理器</param>
            <param name="key">缓存键</param>
            <param name="acquire">如果缓存不存在时的回调函数</param>
            <returns>缓存值</returns>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.CacheExtensions.Get``1(HuCheng.Util.Core.Caches.ICacheManager,System.String,System.Int32,System.Func{``0})">
            <summary>
            获得指定键的缓存值,不存在则添加到缓存中
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="cacheManager">缓存管理器</param>
            <param name="key">缓存键</param>
            <param name="cacheTime">缓存时间</param>
            <param name="acquire">如果缓存不存在时的回调函数</param>
            <returns>缓存值</returns>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.CacheExtensions.RemoveByPattern(HuCheng.Util.Core.Caches.ICacheManager,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根据模式移除指定缓存值
            </summary>
            <param name="cacheManager">缓存管理器</param>
            <param name="pattern">Pattern</param>
            <param name="keys">缓存中的键值列表</param>
        </member>
        <member name="T:HuCheng.Util.Core.Extension.QueryExtensions">
            <summary>
            查询扩展
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.QueryExtensions.Filter``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            过滤
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="source">数据源</param>
            <param name="predicate">谓词</param>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.QueryExtensions.OrderBy``1(System.Linq.IQueryable{``0},System.String)">
            <summary>
            排序
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="source">数据源</param>
            <param name="propertyName">排序属性名，多个属性用逗号分隔，降序用desc字符串，范例：Name,Age desc</param>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.QueryExtensions.PagerResult``1(System.Linq.IQueryable{``0},System.Int32,System.Int32)">
            <summary>
            创建分页列表
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="source">数据源</param>
            <param name="page">页索引，表示第几页，从1开始</param>
            <param name="pageSize">每页显示行数，默认20</param>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.QueryExtensions.PagerResult``1(System.Linq.IQueryable{``0},HuCheng.Util.Core.Datas.Repositories.IPager)">
            <summary>
            创建分页列表
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="source">数据源</param>
            <param name="pager">分页对象</param>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.QueryExtensions.OrderBy``1(System.Linq.IQueryable{``0},HuCheng.Util.Core.Datas.Repositories.IPager)">
            <summary>
            排序
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.QueryExtensions.Pager``1(System.Linq.IQueryable{``0},HuCheng.Util.Core.Datas.Repositories.IPager)">
            <summary>
            分页
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="source">数据源</param>
            <param name="pager">分页对象</param>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.QueryExtensions.ToPageList``1(System.Collections.Generic.IEnumerable{``0},HuCheng.Util.Core.Datas.Repositories.IPager)">
            <summary>
            转换为分页列表
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="source">数据源</param>
            <param name="pager">分页对象</param>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.QueryExtensions.WhereIf``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Boolean)">
            <summary>
            WhereIf
            </summary>
            <param name="source">查询源</param>
            <param name="predicate">查询表达式</param>
            <param name="condition">触发条件</param>
            <typeparam name="T">类型</typeparam>
            <returns>查询源</returns>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.QueryExtensions.WhereIf``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}},System.Boolean)">
            <summary>
            WhereIf
            </summary>
            <param name="source">查询源</param>
            <param name="predicate">查询表达式</param>
            <param name="condition">触发条件</param>
            <typeparam name="T">类型</typeparam>
            <returns>查询源</returns>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.QueryExtensions.WhereIf``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},System.Boolean)">
            <summary>
            WhereIf
            </summary>
            <param name="source">查询集合</param>
            <param name="predicate">查询表达式</param>
            <param name="condition">触发条件</param>
            <typeparam name="T">类型</typeparam>
            <returns>查询源</returns>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.QueryExtensions.WhereIf``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean},System.Boolean)">
            <summary>
            WhereIf
            </summary>
            <param name="source">查询集合</param>
            <param name="predicate">查询表达式</param>
            <param name="condition">触发条件</param>
            <typeparam name="T">类型</typeparam>
            <returns>查询源</returns>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.QueryExtensions.OrderByIf``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Boolean)">
            <summary>
            OrderByIf
            </summary>
            <param name="source">查询源</param>
            <param name="predicate">查询表达式</param>
            <param name="condition">触发条件</param>
            <typeparam name="T">泛型</typeparam>
            <typeparam name="TS">泛型</typeparam>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.QueryExtensions.OrderByDescendingIf``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Boolean)">
            <summary>
            OrderByDescendingIf
            </summary>
            <param name="source">查询源</param>
            <param name="predicate">查询表达式</param>
            <param name="condition">触发条件</param>
            <typeparam name="T">泛型</typeparam>
            <typeparam name="TS">泛型</typeparam>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.QueryExtensions.OrderByDescendingIf``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Boolean)">
            <summary>
            OrderByDescendingIf
            </summary>
            <param name="source">查询源</param>
            <param name="predicate">查询表达式</param>
            <param name="condition">触发条件</param>
            <typeparam name="T">泛型</typeparam>
            <typeparam name="TS">泛型</typeparam>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.QueryExtensions.OrderByIf``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Boolean)">
            <summary>
            OrderByIf
            </summary>
            <param name="source">查询源</param>
            <param name="predicate">查询表达式</param>
            <param name="condition">触发条件</param>
            <typeparam name="T">泛型</typeparam>
            <typeparam name="TS">泛型</typeparam>
            <returns></returns>
        </member>
        <member name="T:HuCheng.Util.Core.Extension.FileUnitExtensions">
            <summary>
            文件容量单位枚举扩展
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.FileUnitExtensions.Description(System.Nullable{HuCheng.Util.Core.Files.FileUnit})">
            <summary>
            获取描述
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.FileUnitExtensions.Value(System.Nullable{HuCheng.Util.Core.Files.FileUnit})">
            <summary>
            获取值
            </summary>
        </member>
        <member name="T:HuCheng.Util.Core.Extension.LoadPageExtension">
            <summary>
            分页扩展
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.LoadPageExtension.LoadPage``1(System.Linq.IQueryable{``0},HuCheng.Util.Core.Datas.Repositories.PageModel,System.Int32@)">
            <summary>
            分页扩展
            </summary>
            <param name="source">查询源</param>
            <param name="page">分页模型类</param>
            <param name="total">总数</param>
            <typeparam name="T">类型</typeparam>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.LoadPageExtension.LoadPage``1(System.Collections.Generic.IEnumerable{``0},HuCheng.Util.Core.Datas.Repositories.PageModel,System.Int32@)">
            <summary>
            分页扩展
            </summary>
            <param name="source">集合迭代源</param>
            <param name="page">分页模型类</param>
            <param name="total">总数</param>
            <typeparam name="T">类型</typeparam>
        </member>
        <member name="T:HuCheng.Util.Core.Extension.ConvertExtension">
            <summary>
            类型转换扩展
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.ConvertExtension.ToInt(System.String)">
            <summary>
            转换为int
            </summary>
            <param name="obj">数据</param>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.ConvertExtension.ToIntOrNull(System.String)">
            <summary>
            转换为可空int
            </summary>
            <param name="obj">数据</param>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.ConvertExtension.ToDouble(System.String)">
            <summary>
            转换为double
            </summary>
            <param name="obj">数据</param>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.ConvertExtension.ToDoubleOrNull(System.String)">
            <summary>
            转换为可空double
            </summary>
            <param name="obj">数据</param>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.ConvertExtension.ToDecimal(System.String)">
            <summary>
            转换为decimal
            </summary>
            <param name="obj">数据</param>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.ConvertExtension.ToDecimalOrNull(System.String)">
            <summary>
            转换为可空decimal
            </summary>
            <param name="obj">数据</param>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.ConvertExtension.ToDate(System.String)">
            <summary>
            转换为日期
            </summary>
            <param name="obj">数据</param>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.ConvertExtension.ToDateOrNull(System.String)">
            <summary>
            转换为可空日期
            </summary>
            <param name="obj">数据</param>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.ConvertExtension.ToGuid(System.String)">
            <summary>
            转换为Guid
            </summary>
            <param name="obj">数据</param>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.ConvertExtension.ToGuidOrNull(System.String)">
            <summary>
            转换为可空Guid
            </summary>
            <param name="obj">数据</param>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.ConvertExtension.ToGuidList(System.String)">
            <summary>
            转换为Guid集合
            </summary>
            <param name="obj">数据,范例: "83B0233C-A24F-49FD-8083-1337209EBC9A,EAB523C6-2FE7-47BE-89D5-C6D440C3033A"</param>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.ConvertExtension.ToGuidList(System.Collections.Generic.IList{System.String})">
            <summary>
            转换为Guid集合
            </summary>
            <param name="obj">字符串集合</param>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.ConvertExtension.ToStr(System.Object)">
            <summary>
            获取字符串
            </summary>
            <param name="obj">对象</param>
        </member>
        <member name="T:HuCheng.Util.Core.Extension.DateTimeExtension">
            <summary>
            日期时间扩展
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.DateTimeExtension.ToDateTimeString(System.DateTime,System.Boolean)">
            <summary>
            获取格式化字符串，带时分秒，格式："yyyy-MM-dd HH:mm:ss"
            </summary>
            <param name="dateTime">日期</param>
            <param name="isRemoveSecond">是否移除秒</param>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.DateTimeExtension.ToDateTimeString(System.Nullable{System.DateTime},System.Boolean)">
            <summary>
            获取格式化字符串，带时分秒，格式："yyyy-MM-dd HH:mm:ss"
            </summary>
            <param name="dateTime">日期</param>
            <param name="isRemoveSecond">是否移除秒</param>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.DateTimeExtension.ToDateString(System.DateTime)">
            <summary>
            获取格式化字符串，不带时分秒，格式："yyyy-MM-dd"
            </summary>
            <param name="dateTime">日期</param>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.DateTimeExtension.ToDateString(System.Nullable{System.DateTime})">
            <summary>
            获取格式化字符串，不带时分秒，格式："yyyy-MM-dd"
            </summary>
            <param name="dateTime">日期</param>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.DateTimeExtension.ToTimeString(System.DateTime)">
            <summary>
            获取格式化字符串，不带年月日，格式："HH:mm:ss"
            </summary>
            <param name="dateTime">日期</param>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.DateTimeExtension.ToTimeString(System.Nullable{System.DateTime})">
            <summary>
            获取格式化字符串，不带年月日，格式："HH:mm:ss"
            </summary>
            <param name="dateTime">日期</param>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.DateTimeExtension.ToMillisecondString(System.DateTime)">
            <summary>
            获取格式化字符串，带毫秒，格式："yyyy-MM-dd HH:mm:ss.fff"
            </summary>
            <param name="dateTime">日期</param>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.DateTimeExtension.ToMillisecondString(System.Nullable{System.DateTime})">
            <summary>
            获取格式化字符串，带毫秒，格式："yyyy-MM-dd HH:mm:ss.fff"
            </summary>
            <param name="dateTime">日期</param>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.DateTimeExtension.ToChineseDateString(System.DateTime)">
            <summary>
            获取格式化字符串，不带时分秒，格式："yyyy年MM月dd日"
            </summary>
            <param name="dateTime">日期</param>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.DateTimeExtension.ToChineseDateString(System.Nullable{System.DateTime})">
            <summary>
            获取格式化字符串，不带时分秒，格式："yyyy年MM月dd日"
            </summary>
            <param name="dateTime">日期</param>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.DateTimeExtension.ToChineseDateTimeString(System.DateTime,System.Boolean)">
            <summary>
            获取格式化字符串，带时分秒，格式："yyyy年MM月dd日 HH时mm分"
            </summary>
            <param name="dateTime">日期</param>
            <param name="isRemoveSecond">是否移除秒</param>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.DateTimeExtension.ToChineseDateTimeString(System.Nullable{System.DateTime},System.Boolean)">
            <summary>
            获取格式化字符串，带时分秒，格式："yyyy年MM月dd日 HH时mm分"
            </summary>
            <param name="dateTime">日期</param>
            <param name="isRemoveSecond">是否移除秒</param>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.DateTimeExtension.GetTimestampByDateTime(System.DateTime)">
            <summary>
            DateTime转换为时间戳
            </summary>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.DateTimeExtension.FirstDayOfMonth(System.DateTime)">
            <summary>  
            取得某月的第一天  
            </summary>  
            <param name="datetime">要取得月份第一天的时间</param>  
            <returns></returns>  
        </member>
        <member name="M:HuCheng.Util.Core.Extension.DateTimeExtension.LastDayOfMonth(System.DateTime)">
            <summary>  
            取得某月的最后一天  
            </summary>  
            <param name="datetime">要取得月份最后一天的时间</param>  
            <returns></returns>  
        </member>
        <member name="M:HuCheng.Util.Core.Extension.DateTimeExtension.FirstDayOfPreviousMonth(System.DateTime)">
            <summary>  
            取得上个月第一天  
            </summary>  
            <param name="datetime">要取得上个月第一天的当前时间</param>  
            <returns></returns>  
        </member>
        <member name="M:HuCheng.Util.Core.Extension.DateTimeExtension.LastDayOfPrdviousMonth(System.DateTime)">
            <summary>  
            取得上个月的最后一天  
            </summary>  
            <param name="datetime">要取得上个月最后一天的当前时间</param>  
            <returns></returns>  
        </member>
        <member name="T:HuCheng.Util.Core.Extension.ExpressionExtension">
            <summary>
            表达式扩展
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.ExpressionExtension.Property(System.Linq.Expressions.Expression,System.String)">
            <summary>
            创建属性表达式
            </summary>
            <param name="expression">表达式</param>
            <param name="propertyName">属性名,支持多级属性名，与句点分隔，范例：Customer.Name</param>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.ExpressionExtension.Property(System.Linq.Expressions.Expression,System.Reflection.MemberInfo)">
            <summary>
            创建属性表达式
            </summary>
            <param name="expression">表达式</param>
            <param name="member">属性</param>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.ExpressionExtension.Operation(System.Linq.Expressions.Expression,HuCheng.Util.Core.Expressions.Operator,System.Object)">
            <summary>
            操作
            </summary>
            <param name="left">左操作数</param>
            <param name="operator">运算符</param>
            <param name="value">值</param>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.ExpressionExtension.StartsWith(System.Linq.Expressions.Expression,System.Object)">
            <summary>
            头匹配
            </summary>
            <param name="left">左操作数</param>
            <param name="value">值</param>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.ExpressionExtension.EndsWith(System.Linq.Expressions.Expression,System.Object)">
            <summary>
            尾匹配
            </summary>
            <param name="left">左操作数</param>
            <param name="value">值</param>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.ExpressionExtension.Call(System.Linq.Expressions.Expression,System.String,System.Linq.Expressions.Expression[])">
            <summary>
            创建调用方法表达式
            </summary>
            <param name="instance">调用的实例</param>
            <param name="methodName">方法名</param>
            <param name="values">参数值列表</param>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.ExpressionExtension.Call(System.Linq.Expressions.Expression,System.String,System.Object[])">
            <summary>
            创建调用方法表达式
            </summary>
            <param name="instance">调用的实例</param>
            <param name="methodName">方法名</param>
            <param name="values">参数值列表</param>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.ExpressionExtension.Call(System.Linq.Expressions.Expression,System.String,System.Type[],System.Object[])">
            <summary>
            创建调用方法表达式
            </summary>
            <param name="instance">调用的实例</param>
            <param name="methodName">方法名</param>
            <param name="paramTypes">参数类型列表</param>
            <param name="values">参数值列表</param>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.ExpressionExtension.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
            创建等于运算表达式
            </summary>
            <param name="left">左操作数</param>
            <param name="right">右操作数</param>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.ExpressionExtension.Equal(System.Linq.Expressions.Expression,System.Object)">
            <summary>
            创建等于运算表达式
            </summary>
            <param name="left">左操作数</param>
            <param name="value">值</param>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.ExpressionExtension.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
            创建不等于运算表达式
            </summary>
            <param name="left">左操作数</param>
            <param name="right">右操作数</param>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.ExpressionExtension.NotEqual(System.Linq.Expressions.Expression,System.Object)">
            <summary>
            创建不等于运算表达式
            </summary>
            <param name="left">左操作数</param>
            <param name="value">值</param>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.ExpressionExtension.Greater(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
            创建大于运算表达式
            </summary>
            <param name="left">左操作数</param>
            <param name="right">右操作数</param>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.ExpressionExtension.Greater(System.Linq.Expressions.Expression,System.Object)">
            <summary>
            创建大于运算表达式
            </summary>
            <param name="left">左操作数</param>
            <param name="value">值</param>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.ExpressionExtension.Less(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
            创建小于运算表达式
            </summary>
            <param name="left">左操作数</param>
            <param name="right">右操作数</param>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.ExpressionExtension.Less(System.Linq.Expressions.Expression,System.Object)">
            <summary>
            创建小于运算表达式
            </summary>
            <param name="left">左操作数</param>
            <param name="value">值</param>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.ExpressionExtension.GreaterEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
            创建大于等于运算表达式
            </summary>
            <param name="left">左操作数</param>
            <param name="right">右操作数</param>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.ExpressionExtension.GreaterEqual(System.Linq.Expressions.Expression,System.Object)">
            <summary>
            创建大于等于运算表达式
            </summary>
            <param name="left">左操作数</param>
            <param name="value">值</param>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.ExpressionExtension.LessEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
            创建小于等于运算表达式
            </summary>
            <param name="left">左操作数</param>
            <param name="right">右操作数</param>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.ExpressionExtension.LessEqual(System.Linq.Expressions.Expression,System.Object)">
            <summary>
            创建小于等于运算表达式
            </summary>
            <param name="left">左操作数</param>
            <param name="value">值</param>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.ExpressionExtension.Compose``1(System.Linq.Expressions.Expression{``0},System.Linq.Expressions.Expression{``0},System.Func{System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression})">
            <summary>
            组合表达式
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="first">左操作数</param>
            <param name="second">右操作数</param>
            <param name="merge">合并操作</param>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.ExpressionExtension.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
            与操作表达式
            </summary>
            <param name="left">左操作数</param>
            <param name="right">右操作数</param>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.ExpressionExtension.And``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            与操作表达式
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="left">左操作数</param>
            <param name="right">右操作数</param>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.ExpressionExtension.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
            或操作表达式
            </summary>
            <param name="left">左操作数</param>
            <param name="right">右操作数</param>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.ExpressionExtension.Or``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            或操作表达式
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="first">左操作数</param>
            <param name="second">右操作数</param>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.ExpressionExtension.Value``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            获取lambda表达式的值
            </summary>
            <typeparam name="T">对象类型</typeparam>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.ExpressionExtension.ToLambda``1(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])">
            <summary>
            创建Lambda表达式
            </summary>
            <typeparam name="TDelegate">委托类型</typeparam>
            <param name="body">表达式</param>
            <param name="parameters">参数列表</param>
        </member>
        <member name="T:HuCheng.Util.Core.Extension.FormatExtensions">
            <summary>
            格式化扩展
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.FormatExtensions.Description(System.Boolean)">
            <summary>
            获取描述
            </summary>
            <param name="value">布尔值</param>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.FormatExtensions.Description(System.Nullable{System.Boolean})">
            <summary>
            获取描述
            </summary>
            <param name="value">布尔值</param>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.FormatExtensions.Format(System.Int32,System.String)">
            <summary>
            获取格式化字符串
            </summary>
            <param name="number">数值</param>
            <param name="defaultValue">空值显示的默认文本</param>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.FormatExtensions.Format(System.Nullable{System.Int32},System.String)">
            <summary>
            获取格式化字符串
            </summary>
            <param name="number">数值</param>
            <param name="defaultValue">空值显示的默认文本</param>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.FormatExtensions.Format(System.Decimal,System.String)">
            <summary>
            获取格式化字符串
            </summary>
            <param name="number">数值</param>
            <param name="defaultValue">空值显示的默认文本</param>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.FormatExtensions.Format(System.Nullable{System.Decimal},System.String)">
            <summary>
            获取格式化字符串
            </summary>
            <param name="number">数值</param>
            <param name="defaultValue">空值显示的默认文本</param>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.FormatExtensions.Format(System.Double,System.String)">
            <summary>
            获取格式化字符串
            </summary>
            <param name="number">数值</param>
            <param name="defaultValue">空值显示的默认文本</param>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.FormatExtensions.Format(System.Nullable{System.Double},System.String)">
            <summary>
            获取格式化字符串
            </summary>
            <param name="number">数值</param>
            <param name="defaultValue">空值显示的默认文本</param>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.FormatExtensions.FormatRmb(System.Decimal)">
            <summary>
            获取格式化字符串,带￥
            </summary>
            <param name="number">数值</param>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.FormatExtensions.FormatRmb(System.Nullable{System.Decimal})">
            <summary>
            获取格式化字符串,带￥
            </summary>
            <param name="number">数值</param>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.FormatExtensions.FormatPercent(System.Decimal)">
            <summary>
            获取格式化字符串,带%
            </summary>
            <param name="number">数值</param>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.FormatExtensions.FormatPercent(System.Nullable{System.Decimal})">
            <summary>
            获取格式化字符串,带%
            </summary>
            <param name="number">数值</param>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.FormatExtensions.FormatPercent(System.Double)">
            <summary>
            获取格式化字符串,带%
            </summary>
            <param name="number">数值</param>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.FormatExtensions.FormatPercent(System.Nullable{System.Double})">
            <summary>
            获取格式化字符串,带%
            </summary>
            <param name="number">数值</param>
        </member>
        <member name="T:HuCheng.Util.Core.Extension.NullableExtension">
            <summary>
            扩展 - 可空类型
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.NullableExtension.SafeValue``1(System.Nullable{``0})">
            <summary>
            安全返回值
            </summary>
            <param name="value">可空值</param>
        </member>
        <member name="T:HuCheng.Util.Core.Extension.ValidateExtension">
            <summary>
            验证扩展
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.ValidateExtension.CheckNull(System.Object,System.String)">
            <summary>
            检测空值,为null则抛出ArgumentNullException异常
            </summary>
            <param name="obj">对象</param>
            <param name="parameterName">参数名</param>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.ValidateExtension.IsEmpty(System.String)">
            <summary>
            是否为空
            </summary>
            <param name="value">值</param>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.ValidateExtension.IsEmpty(System.Nullable{System.Guid})">
            <summary>
            是否为空
            </summary>
            <param name="value">值</param>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.ValidateExtension.IsEmpty(System.Guid)">
            <summary>
            是否为空
            </summary>
            <param name="value">值</param>
        </member>
        <member name="T:HuCheng.Util.Core.Extension.EnumExtension">
            <summary>
            枚举扩展
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.EnumExtension.GetDescription(System.Enum)">
            <summary>
            获取描述,使用System.ComponentModel.Description特性设置描述
            </summary>
            <param name="instance">枚举实例</param>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.EnumExtension.Value(System.Enum)">
            <summary>
            获取成员值
            </summary>
            <param name="instance">枚举实例</param>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.EnumExtension.Value``1(System.Enum)">
            <summary>
            获取成员值
            </summary>
            <typeparam name="T">返回值类型</typeparam>
            <param name="instance">枚举实例</param>
        </member>
        <member name="T:HuCheng.Util.Core.Extension.JsonExtension">
            <summary>
            Json扩展
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.JsonExtension.ToJson(System.Object)">
            <summary>
            对象转json字符串
            </summary>
            <param name="obj">对象</param>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.JsonExtension.ToJson(System.Object,System.String)">
            <summary>
            对象转json字符串(带时间格式化字符)
            </summary>
            <param name="obj"></param>
            <param name="datetimeformats"></param>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.JsonExtension.ToObject(System.String)">
            <summary>
            json字符串转对象
            </summary>
            <param name="json">json字符串</param>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.JsonExtension.ToObject``1(System.String)">
            <summary>
            json字符串转对象
            </summary>
            <param name="json">json字符串</param>
            <typeparam name="T">类型</typeparam>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.JsonExtension.ToList``1(System.String)">
            <summary>
            json字符串转对象列表
            </summary>
            <param name="json">json字符串</param>
            <typeparam name="T">类型</typeparam>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.JsonExtension.ToTable(System.String)">
            <summary>
            json字符串转DataTable
            </summary>
            <param name="json">json字符串</param>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Extension.JsonExtension.ToJObject(System.String)">
            <summary>
            json字符串转JObject
            </summary>
            <param name="json"></param>
            <returns></returns>
        </member>
        <member name="T:HuCheng.Util.Core.Files.DefaultUploadPathStrategy">
            <summary>
            默认上传路径策略
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Files.DefaultUploadPathStrategy.GetPath(System.String,System.String,System.String)">
            <summary>
            获取上传路径,形式：\文件分类目录\文件名-HHmmss.扩展名
            </summary>
            <param name="fileName">文件名，包含扩展名</param>
            <param name="fileCategory">文件分类目录</param>
            <param name="baseCategory">基目录</param>
        </member>
        <member name="T:HuCheng.Util.Core.Files.File">
            <summary>
            文件及流操作 - 文件信息
            </summary>
            <summary>
            文件及流操作 - 流类型转换
            </summary>
            <summary>
            文件及流操作
            </summary>
            <summary>
            文件及流操作 - 文件路径操作
            </summary>
            <summary>
            文件及流操作 - 流操作
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Files.File.Save(System.Collections.Generic.IEnumerable{HuCheng.Util.Core.Files.FileInfo})">
            <summary>
            保存文件
            </summary>
            <param name="files">文件信息集合</param>
        </member>
        <member name="M:HuCheng.Util.Core.Files.File.Save(HuCheng.Util.Core.Files.FileInfo)">
            <summary>
            保存文件
            </summary>
            <param name="file">文件信息</param>
        </member>
        <member name="M:HuCheng.Util.Core.Files.File.ValidateSave(HuCheng.Util.Core.Files.FileInfo)">
            <summary>
            验证保存文件
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Files.File.CreateDirectory(HuCheng.Util.Core.Files.FileInfo)">
            <summary>
            创建目录
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Files.File.SaveFile(HuCheng.Util.Core.Files.FileInfo)">
            <summary>
            保存文件
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Files.File.StreamToString(System.IO.Stream)">
            <summary>
            流转换成字符串
            </summary>
            <param name="data">数据</param>
        </member>
        <member name="M:HuCheng.Util.Core.Files.File.StreamToString(System.IO.Stream,System.Text.Encoding)">
            <summary>
            流转换成字符串
            </summary>
            <param name="data">数据</param>
            <param name="encoding">字符编码</param>
        </member>
        <member name="M:HuCheng.Util.Core.Files.File.StringToStream(System.String)">
            <summary>
            字符串转换成流
            </summary>
            <param name="data">数据</param>
        </member>
        <member name="M:HuCheng.Util.Core.Files.File.StringToStream(System.String,System.Text.Encoding)">
            <summary>
            字符串转换成流
            </summary>
            <param name="data">数据</param>
            <param name="encoding">字符编码</param>
        </member>
        <member name="M:HuCheng.Util.Core.Files.File.StringToBytes(System.String)">
            <summary>
            字符串转换成字节数组
            </summary>
            <param name="data">数据,默认字符编码utf-8</param>        
        </member>
        <member name="M:HuCheng.Util.Core.Files.File.StringToBytes(System.String,System.Text.Encoding)">
            <summary>
            字符串转换成字节数组
            </summary>
            <param name="data">数据</param>
            <param name="encoding">字符编码</param>
        </member>
        <member name="M:HuCheng.Util.Core.Files.File.BytesToString(System.Byte[])">
            <summary>
            字节数组转换成字符串
            </summary>
            <param name="data">数据,默认字符编码utf-8</param>        
        </member>
        <member name="M:HuCheng.Util.Core.Files.File.BytesToString(System.Byte[],System.Text.Encoding)">
            <summary>
            字节数组转换成字符串
            </summary>
            <param name="data">数据</param>
            <param name="encoding">字符编码</param>
        </member>
        <member name="M:HuCheng.Util.Core.Files.File.BytesToInt(System.Byte[])">
            <summary>
            字节数组转换成整数
            </summary>
            <param name="data">数据</param>
        </member>
        <member name="M:HuCheng.Util.Core.Files.File.StreamToBytes(System.IO.Stream)">
            <summary>
            流转换为字节流
            </summary>
            <param name="stream">流</param>
        </member>
        <member name="M:HuCheng.Util.Core.Files.File.Read(System.String)">
            <summary>
            读取文件到字符串
            </summary>
            <param name="filePath">文件的绝对路径</param>
        </member>
        <member name="M:HuCheng.Util.Core.Files.File.Read(System.String,System.Text.Encoding)">
            <summary>
            读取文件到字符串
            </summary>
            <param name="filePath">文件的绝对路径</param>
            <param name="encoding">字符编码</param>
        </member>
        <member name="M:HuCheng.Util.Core.Files.File.ReadToBytes(System.String)">
            <summary>
            将文件读取到字节流中
            </summary>
            <param name="filePath">文件的绝对路径</param>
        </member>
        <member name="M:HuCheng.Util.Core.Files.File.Write(System.String,System.String)">
            <summary>
            将字符串写入文件,文件不存在则创建
            </summary>
            <param name="filePath">文件的绝对路径</param>
            <param name="content">数据</param>
        </member>
        <member name="M:HuCheng.Util.Core.Files.File.Write(System.String,System.Byte[])">
            <summary>
            将字节流写入文件,文件不存在则创建
            </summary>
            <param name="filePath">文件的绝对路径</param>
            <param name="bytes">数据</param>
        </member>
        <member name="M:HuCheng.Util.Core.Files.File.Delete(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            删除文件
            </summary>
            <param name="filePaths">文件集合的绝对路径</param>
        </member>
        <member name="M:HuCheng.Util.Core.Files.File.Delete(System.String)">
            <summary>
            删除文件
            </summary>
            <param name="filePath">文件的绝对路径</param>
        </member>
        <member name="M:HuCheng.Util.Core.Files.File.GetAllFiles(System.String)">
            <summary>
            获取目录中全部文件列表，包括子目录
            </summary>
            <param name="directoryPath">目录绝对路径</param>
        </member>
        <member name="M:HuCheng.Util.Core.Files.File.JoinPath(System.String,System.String)">
            <summary>
            连接基路径和子路径,比如把 c: 与 test.doc 连接成 c:\test.doc
            </summary>
            <param name="basePath">基路径,范例：c:</param>
            <param name="subPath">子路径,可以是文件名, 范例：test.doc</param>
        </member>
        <member name="M:HuCheng.Util.Core.Files.File.AddLength(System.Byte[])">
            <summary>
            为字节流添加长度，长度从第1个字节到第4个字节
            </summary>
            <param name="buffer">字节流</param>
        </member>
        <member name="T:HuCheng.Util.Core.Files.FileInfo">
            <summary>
            文件信息
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Files.FileInfo.#ctor(System.String,System.Byte[],System.Nullable{System.Int64},System.String)">
            <summary>
            初始化文件信息
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Files.FileInfo.GetFileName(System.String,System.String)">
            <summary>
            获取文件名
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.Files.FileInfo.FilePath">
            <summary>
            文件相对路径
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.Files.FileInfo.FileName">
            <summary>
            文件名，不包括扩展名
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.Files.FileInfo.Extension">
            <summary>
            扩展名
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.Files.FileInfo.FileBytes">
            <summary>
            文件字节流
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.Files.FileInfo.Length">
            <summary>
            文件长度,单位：字节
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Files.FileInfo.Create(System.String,System.Nullable{System.Int64},System.String)">
            <summary>
            创建文件信息
            </summary>
            <param name="filePath">文件相对路径</param>
            <param name="fileSize">文件大小</param>
            <param name="fileName">文件名</param>
        </member>
        <member name="M:HuCheng.Util.Core.Files.FileInfo.Create(System.String,System.Byte[],System.String)">
            <summary>
            创建文件信息
            </summary>
            <param name="filePath">文件相对路径</param>
            <param name="fileBytes">文件字节流</param>
            <param name="fileName">文件名</param>
        </member>
        <member name="M:HuCheng.Util.Core.Files.FileInfo.GetPhysicalPath">
            <summary>
            获取文件的绝对路径,范例：c:/a.jpg
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Files.FileInfo.Join(System.String,System.String)">
            <summary>
            合并路径
            </summary>
            <param name="filePath">文件路径</param>
            <param name="fileName">文件名</param>
        </member>
        <member name="M:HuCheng.Util.Core.Files.FileInfo.GetFileName(System.String)">
            <summary>
            从文件路径中获取文件名(包含扩展名)
            </summary>
            <param name="filePath">文件路径</param>
        </member>
        <member name="M:HuCheng.Util.Core.Files.FileInfo.GetFileNameWithoutExtension(System.String)">
            <summary>
            从文件路径中获取文件名(不包含扩展名)
            </summary>
            <param name="filePath">文件路径</param>
        </member>
        <member name="M:HuCheng.Util.Core.Files.FileInfo.GetExtension(System.String)">
            <summary>
            从文件路径中获取扩展名
            </summary>
            <param name="filePath">文件路径</param>
        </member>
        <member name="M:HuCheng.Util.Core.Files.FileInfo.GetDirectoryName(System.String)">
            <summary>
            从文件路径中获取目录
            </summary>
            <param name="filePath">文件路径</param>
        </member>
        <member name="M:HuCheng.Util.Core.Files.FileInfo.GetSafeName(System.String)">
            <summary>
            获取更安全的文件名，过滤无效字符，将汉字转成拼音简码，且对文件名添加时分秒，更不易重复，范例：@中国*.jpg，结果为zg-112233.jpg
            </summary>
            <param name="fileName">文件名，包含扩展名，范例：c.jpg</param>
        </member>
        <member name="M:HuCheng.Util.Core.Files.FileInfo.ValidateFileName(System.String)">
            <summary>
            验证文件名
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Files.FileInfo.FilterFileName(System.String)">
            <summary>
            过滤文件名
            </summary>
        </member>
        <member name="T:HuCheng.Util.Core.Files.FileManager">
            <summary>
            文件管理器
            </summary>
        </member>
        <member name="F:HuCheng.Util.Core.Files.FileManager._result">
            <summary>
            结果
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.Files.FileManager.FilePath">
            <summary>
            文件绝对路径
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Files.FileManager.Append(System.String)">
            <summary>
            添加内容到文件末尾
            </summary>
            <param name="content">内容</param>
        </member>
        <member name="M:HuCheng.Util.Core.Files.FileManager.Init">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Files.FileManager.Remove(System.String)">
            <summary>
            移除内容
            </summary>
            <param name="content">内容</param>
        </member>
        <member name="M:HuCheng.Util.Core.Files.FileManager.Remove(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            移除内容
            </summary>
            <param name="list">内容列表</param>
        </member>
        <member name="M:HuCheng.Util.Core.Files.FileManager.Save">
            <summary>
            保存
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Files.FileManager.DeleteFiles(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            删除文件列表
            </summary>
            <param name="paths">文件路径列表</param>
        </member>
        <member name="T:HuCheng.Util.Core.Files.FileSize">
            <summary>
            文件大小
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Files.FileSize.#ctor(System.Int64,HuCheng.Util.Core.Files.FileUnit)">
            <summary>
            初始化文件大小
            </summary>
            <param name="size">文件字节大小</param>
            <param name="unit">文件字节大小</param>
        </member>
        <member name="M:HuCheng.Util.Core.Files.FileSize.GetSize(System.Int64,HuCheng.Util.Core.Files.FileUnit)">
            <summary>
            获取文件大小
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.Files.FileSize.Size">
            <summary>
            文件字节长度
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Files.FileSize.GetSizeByG">
            <summary>
            获取文件大小，单位：G
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Files.FileSize.GetSizeByM">
            <summary>
            获取文件大小，单位：M
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Files.FileSize.GetSizeByK">
            <summary>
            获取文件大小，单位：K
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Files.FileSize.GetSize">
            <summary>
            获取文件大小，单位：字节
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Files.FileSize.ToString">
            <summary>
            输出描述
            </summary>
        </member>
        <member name="T:HuCheng.Util.Core.Files.FileUnit">
            <summary>
            文件容量单位
            </summary>
        </member>
        <member name="F:HuCheng.Util.Core.Files.FileUnit.Byte">
            <summary>
            字节
            </summary>
        </member>
        <member name="F:HuCheng.Util.Core.Files.FileUnit.K">
            <summary>
            K字节
            </summary>
        </member>
        <member name="F:HuCheng.Util.Core.Files.FileUnit.M">
            <summary>
            M字节
            </summary>
        </member>
        <member name="F:HuCheng.Util.Core.Files.FileUnit.G">
            <summary>
            G字节
            </summary>
        </member>
        <member name="T:HuCheng.Util.Core.Files.FileUpload">
            <summary>
            文件上传操作
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Files.FileUpload.#ctor(HuCheng.Util.Core.Files.IUploadPathStrategy)">
            <summary>
            初始化文件上传操作
            </summary>
            <param name="uploadPathStrategy">上传路径策略</param>
        </member>
        <member name="P:HuCheng.Util.Core.Files.FileUpload.UploadPathStrategy">
            <summary>
            上传路径策略
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Files.FileUpload.GetFile(System.String,System.String)">
            <summary>
            获取上传文件
            </summary>
            <param name="fileCategory">文件分类目录</param>
            <param name="baseCategory">基分类目录</param>
        </member>
        <member name="M:HuCheng.Util.Core.Files.FileUpload.ToFileInfo(System.Web.HttpPostedFile,System.String,System.String)">
            <summary>
            转换为文件信息
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Files.FileUpload.GetFilePath(System.Web.HttpPostedFile,System.String,System.String)">
            <summary>
            获取文件路径
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Files.FileUpload.GetFileName(System.Web.HttpPostedFile)">
            <summary>
            获取文件名
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Files.FileUpload.GetImage(System.String,System.String)">
            <summary>
            获取上传图片
            </summary>
            <param name="fileCategory">文件分类目录</param>
            <param name="baseCategory">基分类目录</param>
        </member>
        <member name="M:HuCheng.Util.Core.Files.FileUpload.ToImageInfo(System.Web.HttpPostedFile,System.String,System.String)">
            <summary>
            转换为图片信息
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Files.FileUpload.GetSize(System.IO.Stream)">
            <summary>
            获取图片尺寸
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Files.FileUpload.GetFiles(System.String,System.String)">
            <summary>
            获取上传文件集合
            </summary>
            <param name="fileCategory">文件分类目录</param>
            <param name="baseCategory">基分类目录</param>
        </member>
        <member name="M:HuCheng.Util.Core.Files.FileUpload.GetImages(System.String,System.String)">
            <summary>
            获取上传图片集合
            </summary>
            <param name="fileCategory">文件分类目录</param>
            <param name="baseCategory">基分类目录</param>
        </member>
        <member name="M:HuCheng.Util.Core.Files.FileUpload.UploadFile(System.String,System.String)">
            <summary>
            上传文件
            </summary>
            <param name="fileCategory">文件分类目录</param>
            <param name="baseCategory">基分类目录</param>
        </member>
        <member name="M:HuCheng.Util.Core.Files.FileUpload.UploadImage(System.String,System.String)">
            <summary>
            上传图片
            </summary>
            <param name="fileCategory">文件分类目录</param>
            <param name="baseCategory">基分类目录</param>
        </member>
        <member name="M:HuCheng.Util.Core.Files.FileUpload.UploadFiles(System.String,System.String)">
            <summary>
            上传文件集合
            </summary>
            <param name="fileCategory">文件分类目录</param>
            <param name="baseCategory">基分类目录</param>
        </member>
        <member name="M:HuCheng.Util.Core.Files.FileUpload.UploadImages(System.String,System.String)">
            <summary>
            上传图片集合
            </summary>
            <param name="fileCategory">文件分类目录</param>
            <param name="baseCategory">基分类目录</param>
        </member>
        <member name="T:HuCheng.Util.Core.Files.IFileManager">
            <summary>
            文件管理器
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.Files.IFileManager.FilePath">
            <summary>
            文件路径
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Files.IFileManager.Append(System.String)">
            <summary>
            添加内容到文件末尾
            </summary>
            <param name="content">内容</param>
        </member>
        <member name="M:HuCheng.Util.Core.Files.IFileManager.Remove(System.String)">
            <summary>
            移除内容
            </summary>
            <param name="content">内容</param>
        </member>
        <member name="M:HuCheng.Util.Core.Files.IFileManager.Remove(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            移除内容
            </summary>
            <param name="list">内容列表</param>
        </member>
        <member name="M:HuCheng.Util.Core.Files.IFileManager.Save">
            <summary>
            保存
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Files.IFileManager.DeleteFiles(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            删除文件列表
            </summary>
            <param name="paths">文件路径列表</param>
        </member>
        <member name="T:HuCheng.Util.Core.Files.IFileUpload">
            <summary>
            文件上传操作
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.Files.IFileUpload.UploadPathStrategy">
            <summary>
            上传路径策略
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Files.IFileUpload.GetFile(System.String,System.String)">
            <summary>
            获取上传文件
            </summary>
            <param name="fileCategory">文件分类目录</param>
            <param name="baseCategory">基分类目录</param>
        </member>
        <member name="M:HuCheng.Util.Core.Files.IFileUpload.GetImage(System.String,System.String)">
            <summary>
            获取上传图片
            </summary>
            <param name="fileCategory">文件分类目录</param>
            <param name="baseCategory">基分类目录</param>
        </member>
        <member name="M:HuCheng.Util.Core.Files.IFileUpload.GetFiles(System.String,System.String)">
            <summary>
            获取上传文件集合
            </summary>
            <param name="fileCategory">文件分类目录</param>
            <param name="baseCategory">基分类目录</param>
        </member>
        <member name="M:HuCheng.Util.Core.Files.IFileUpload.GetImages(System.String,System.String)">
            <summary>
            获取上传图片集合
            </summary>
            <param name="fileCategory">文件分类目录</param>
            <param name="baseCategory">基分类目录</param>
        </member>
        <member name="M:HuCheng.Util.Core.Files.IFileUpload.UploadFile(System.String,System.String)">
            <summary>
            上传文件
            </summary>
            <param name="fileCategory">文件分类目录</param>
            <param name="baseCategory">基分类目录</param>
        </member>
        <member name="M:HuCheng.Util.Core.Files.IFileUpload.UploadImage(System.String,System.String)">
            <summary>
            上传图片
            </summary>
            <param name="fileCategory">文件分类目录</param>
            <param name="baseCategory">基分类目录</param>
        </member>
        <member name="M:HuCheng.Util.Core.Files.IFileUpload.UploadFiles(System.String,System.String)">
            <summary>
            上传文件集合
            </summary>
            <param name="fileCategory">文件分类目录</param>
            <param name="baseCategory">基分类目录</param>
        </member>
        <member name="M:HuCheng.Util.Core.Files.IFileUpload.UploadImages(System.String,System.String)">
            <summary>
            上传图片集合
            </summary>
            <param name="fileCategory">文件分类目录</param>
            <param name="baseCategory">基分类目录</param>
        </member>
        <member name="T:HuCheng.Util.Core.Files.IUploadPathStrategy">
            <summary>
            上传路径策略
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Files.IUploadPathStrategy.GetPath(System.String,System.String,System.String)">
            <summary>
            获取上传路径
            </summary>
            <param name="fileName">文件名，包含扩展名</param>
            <param name="fileCategory">文件分类目录</param>
            <param name="baseCategory">基分类目录</param>
        </member>
        <member name="T:HuCheng.Util.Core.Helper.ConfigHelper">
            <summary>
            配置文件帮助类
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.Helper.ConfigHelper.DefaultEncoding">
            <summary>
            默认编码,值为utf-8
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.ConfigHelper.GetAppSettings(System.String)">
            <summary>
            根据键名获取appSettings值
            </summary>
            <param name="key">键名</param>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.ConfigHelper.GetConnectionString(System.String)">
            <summary>
            获取连接字符串
            </summary>
            <param name="key">键名</param>        
        </member>
        <member name="M:HuCheng.Util.Core.Helper.ConfigHelper.GetProviderName(System.String)">
            <summary>
            获取数据提供程序名称
            </summary>
            <param name="key">键名</param>
        </member>
        <member name="T:HuCheng.Util.Core.Helper.NumberHelper">
            <summary>
            数值帮助类
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.NumberHelper.DecimalToFraction(System.Decimal)">
            <summary>
            小数化分数
            </summary>
            <param name="decimals">小数</param>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.NumberHelper.MaxY(System.Int32,System.Int32)">
            <summary>
            求最大公约数
            </summary>
            <param name="firstNumber">第一个数</param>
            <param name="secondNumber">第二个数</param>
            <returns></returns>
        </member>
        <member name="T:HuCheng.Util.Core.Helper.RegexHelper">
            <summary>
            正则帮助类
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.RegexHelper.MatchString(System.String,System.String)">
            <summary>
            根据模式匹配字符串
            </summary>
            <param name="pattern">模式</param>
            <param name="str">字符串</param>
            <returns>匹配结果</returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.RegexHelper.LegalMoney(System.Decimal,System.Int32)">
            <summary>
            是否合法金额格式
            </summary>
            <param name="money">金额</param>
            <param name="pointLength">小数点位数</param>
            <returns>匹配结果</returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.RegexHelper.DeFormatMoney(System.String)">
            <summary>
            反格式金额字符
            </summary>
            <param name="p">金额字符</param>
            <returns>反格式金额字符</returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.RegexHelper.GetValue(System.String,System.String,System.String)">
            <summary>
            获得字符串中开始和结束字符串中间得值
            </summary>
            <param name="str"></param>
            <param name="s">开始</param>
            <param name="e">结束</param>
            <returns></returns> 
        </member>
        <member name="M:HuCheng.Util.Core.Helper.RegexHelper.Replace(System.String,System.String,System.String)">
            <summary>
            替换第一个
            </summary>
            <param name="source"></param>
            <param name="match"></param>
            <param name="replacement"></param>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.RegexHelper.IndexOf(System.Char[],System.Char[])">
            <summary>
            查找字符数组在另一个字符数组中匹配的位置
            </summary>
            <param name="source">源字符数组</param>
            <param name="match">匹配字符数组</param>
            <returns>匹配的位置，未找到匹配则返回-1</returns>
        </member>
        <member name="T:HuCheng.Util.Core.Helper.XmlHelper">
            <summary>
            XML帮助类
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.XmlHelper.SerializeToXml(System.Object,System.String)">
            <summary>
            XML序列化
            </summary>
            <param name="obj">序列对象</param>
            <param name="filePath">XML文件路径</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.XmlHelper.DeserializeFromXml(System.Type,System.String)">
            <summary>
            XML反序列化
            </summary>
            <param name="type">目标类型(Type类型)</param>
            <param name="filePath">XML文件路径</param>
            <returns>序列对象</returns>
        </member>
        <member name="T:HuCheng.Util.Core.Helper.FileHelper">
            <summary>
            文件路径映射帮助类
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.FileHelper.MapPath(System.String)">
            <summary>
            获取文件路径
            </summary>
            <param name="strPath"></param>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.FileHelper.GetFileFullUrl(System.String)">
            <summary>
            获取文件完整地址
            </summary>
        </member>
        <member name="T:HuCheng.Util.Core.Helper.CommonHelper">
            <summary>
            通用帮助类
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.CommonHelper.ArrayToList``1(``0[])">
            <summary>
            数组转换为列表
            </summary>
            <param name="array">数组</param>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.CommonHelper.ToMap(System.Object)">
            <summary>  
            将对象属性转换为key-value对  
            </summary>
            <param name="o"></param>  
            <returns></returns>  
        </member>
        <member name="M:HuCheng.Util.Core.Helper.CommonHelper.ToMapStrDic(System.Object)">
            <summary>  
            将对象属性转换为key-value对  
            </summary>
            <param name="o"></param>  
            <returns></returns>  
        </member>
        <member name="T:HuCheng.Util.Core.Helper.DataTableHelper">
            <summary>
            DataTable帮助类
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.DataTableHelper.DataTableToList``1(System.Data.DataTable)">
            <summary>  
            利用反射将DataTable转换为泛型List对象
            </summary>  
            <param name="dt">DataTable 对象</param>  
            <returns>泛型List对象集合</returns>   
        </member>
        <member name="M:HuCheng.Util.Core.Helper.DataTableHelper.DataTableToList(System.Data.DataTable)">
            <summary> 
            DataTable转化为字典键值对列表
            </summary> 
            <param name="dt">DataTable</param> 
            <returns>字典键值对列表</returns> 
        </member>
        <member name="T:HuCheng.Util.Core.Helper.DateTimeHelper">
            <summary>
            DateTime帮助类
            </summary>
        </member>
        <member name="F:HuCheng.Util.Core.Helper.DateTimeHelper.Weekdays">
            <summary>
            /星期数组
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.DateTimeHelper.GetDateTimeMs">
            <summary>
            获得当前时间的""yyyy-MM-dd HH:mm:ss:fffffff""格式字符串
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.DateTimeHelper.GetDateTimeU">
            <summary>
            获得当前时间的""yyyy年MM月dd日 HH:mm:ss""格式字符串
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.DateTimeHelper.GetDateTime">
            <summary>
            获得当前时间的""yyyy-MM-dd HH:mm:ss""格式字符串
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.DateTimeHelper.GetDate">
            <summary>
            获得当前日期
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.DateTimeHelper.GetChineseDate">
            <summary>
            获得中文当前日期
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.DateTimeHelper.GetTime">
            <summary>
            获得当前时间(不含日期部分)
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.DateTimeHelper.GetHour">
            <summary>
            获得当前小时
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.DateTimeHelper.GetDay">
            <summary>
            获得当前天
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.DateTimeHelper.GetMonth">
            <summary>
            获得当前月
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.DateTimeHelper.GetYear">
            <summary>
            获得当前年
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.DateTimeHelper.GetDayOfWeek">
            <summary>
            获得当前星期(数字)
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.DateTimeHelper.GetWeek">
            <summary>
            获得当前星期(汉字)
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.DateTimeHelper.GetTimeSpan(System.DateTime)">
            <summary>
            获取差值
            </summary>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.DateTimeHelper.GetBeiJingNowDateTime">
            <summary>
            获取当前北京时区当前时间
            </summary>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.DateTimeHelper.GetDateTimeByTimestamp(System.String)">
            <summary>
            时间戳转Datetime
            </summary>
            <param name="timestamp"></param>
            <returns></returns>
        </member>
        <member name="T:HuCheng.Util.Core.Helper.ImageHelper">
            <summary>
            图片帮助类
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.ImageHelper.GetJpegCodec">
            <summary>
            获得当前系统安装的JPEG编码解码器
            </summary>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.ImageHelper.GenerateThumb(System.String,System.String,System.Int32,System.Int32,HuCheng.Util.Core.Helper.GenerateThumbMode)">
            <summary>
            生成缩略图
            </summary>
            <param name="imagePath">图片路径</param>
            <param name="thumbPath">缩略图路径</param>
            <param name="width">缩略图宽度</param>
            <param name="height">缩略图高度</param>
            <param name="mode">生成缩略图的方式</param>   
        </member>
        <member name="M:HuCheng.Util.Core.Helper.ImageHelper.GenerateImageWatermark(System.String,System.String,System.String,HuCheng.Util.Core.Helper.WatermarkPosition,System.Int32,System.Int32)">
            <summary>
            生成图片水印
            </summary>
            <param name="originalPath">源图路径</param>
            <param name="watermarkPath">水印图片路径</param>
            <param name="targetPath">保存路径</param>
            <param name="position">位置</param>
            <param name="opacity">透明度(1-10)</param>
            <param name="quality">质量(1-100)</param>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.ImageHelper.GenerateTextWatermark(System.String,System.String,System.String,System.Int32,System.String,HuCheng.Util.Core.Helper.WatermarkPosition,System.Int32)">
            <summary>
            生成文字水印
            </summary>
            <param name="originalPath">源图路径</param>
            <param name="targetPath">保存路径</param>
            <param name="text">水印文字</param>
            <param name="textSize">文字大小</param>
            <param name="textFont">文字字体</param>
            <param name="position">位置</param>
            <param name="quality">质量</param>
        </member>
        <member name="T:HuCheng.Util.Core.Helper.GenerateThumbMode">
            <summary>
            生成缩略图的方式
            </summary>
        </member>
        <member name="F:HuCheng.Util.Core.Helper.GenerateThumbMode.HW">
            <summary>
            指定高宽缩放(可能变形)
            </summary>
        </member>
        <member name="F:HuCheng.Util.Core.Helper.GenerateThumbMode.W">
            <summary>
            指定宽，高按比例
            </summary>
        </member>
        <member name="F:HuCheng.Util.Core.Helper.GenerateThumbMode.H">
            <summary>
            指定高，宽按比例
            </summary>
        </member>
        <member name="F:HuCheng.Util.Core.Helper.GenerateThumbMode.Cut">
            <summary>
            指定高宽裁减（不变形）
            </summary>
        </member>
        <member name="T:HuCheng.Util.Core.Helper.WatermarkPosition">
            <summary>
            水印位置
            </summary>
        </member>
        <member name="F:HuCheng.Util.Core.Helper.WatermarkPosition.TopLeft">
            <summary>
            上左
            </summary>
        </member>
        <member name="F:HuCheng.Util.Core.Helper.WatermarkPosition.TopCenter">
            <summary>
            上中
            </summary>
        </member>
        <member name="F:HuCheng.Util.Core.Helper.WatermarkPosition.TopRight">
            <summary>
            上右
            </summary>
        </member>
        <member name="F:HuCheng.Util.Core.Helper.WatermarkPosition.CenterLeft">
            <summary>
            中左
            </summary>
        </member>
        <member name="F:HuCheng.Util.Core.Helper.WatermarkPosition.CenterCenter">
            <summary>
            中中
            </summary>
        </member>
        <member name="F:HuCheng.Util.Core.Helper.WatermarkPosition.CenterRight">
            <summary>
            中右
            </summary>
        </member>
        <member name="F:HuCheng.Util.Core.Helper.WatermarkPosition.BottomLeft">
            <summary>
            下左
            </summary>
        </member>
        <member name="F:HuCheng.Util.Core.Helper.WatermarkPosition.BottomCenter">
            <summary>
            下中
            </summary>
        </member>
        <member name="F:HuCheng.Util.Core.Helper.WatermarkPosition.BottomRight">
            <summary>
            下右
            </summary>
        </member>
        <member name="T:HuCheng.Util.Core.Helper.ValidateHelper">
            <summary>
            验证帮助类
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.ValidateHelper.GetStringLength(System.String)">
            <summary>
            返回字符串真实长度, 1个汉字长度为2
            </summary>
            <returns>字符长度</returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.ValidateHelper.IsValidUserName(System.String)">
            <summary>
            检测用户名格式是否有效(长度4-20位,只能是汉字、字母、下划线、数字)
            </summary>
            <param name="userName"></param>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.ValidateHelper.IsCorrectPassword(System.String)">
            <summary>
            是否符合规则的密码(长度6-20位,仅当包含数字、字母和特殊字符)
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.ValidateHelper.IsEmail(System.String)">
            <summary>
            是否为邮箱名
            <param name="s">输入字符</param>
            <returns>验证成功为True，否则为False</returns>
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.ValidateHelper.IsMobile(System.String)">
            <summary>
            是否为手机号
            <param name="s">输入字符</param>
            <returns>验证成功为True，否则为False</returns>
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.ValidateHelper.IsPhone(System.String)">
            <summary>
            是否为固话号
            <param name="s">输入字符</param>
            <returns>验证成功为True，否则为False</returns>
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.ValidateHelper.IsZipCode(System.String)">
            <summary>
            是否为邮政编码
            <param name="s">输入字符</param>
            <returns>验证成功为True，否则为False</returns>
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.ValidateHelper.IsUrl(System.String)">
            <summary>
            是否为Url
            <param name="s">输入字符</param>
            <returns>验证成功为True，否则为False</returns>
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.ValidateHelper.IsSafeSqlString(System.String,System.Boolean)">
            <summary>
            判断当前字符串是否存在SQL注入
            </summary>
            <returns>验证成功为True，否则为False</returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.ValidateHelper.IsIdCard(System.String)">
            <summary>
            是否为身份证号
            </summary>
            <param name="id">身份证号</param>
            <returns>验证成功为True，否则为False</returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.ValidateHelper.CheckIdCard18(System.String)">
            <summary>
            是否为18位身份证号
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.ValidateHelper.CheckIdCard15(System.String)">
            <summary>
            是否为15位身份证号
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.ValidateHelper.CheckBankCard(System.String)">
            <summary>
            银行卡号验证
            </summary>
            <param name="cardNo">银行卡号</param>
            <returns>验证成功为True，否则为False</returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.ValidateHelper.IsImgFileName(System.String)">
            <summary>
            是否是图片文件名
            </summary>
            <returns>验证成功为True，否则为False</returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.ValidateHelper.IsIp(System.String)">
            <summary>
            是否为IP
            <param name="s">输入字符</param>
            <returns>验证成功为True，否则为False</returns>
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.ValidateHelper.InIp(System.String,System.String)">
            <summary>
            判断一个ip是否在另一个ip内
            </summary>
            <param name="sourceIp">检测ip</param>
            <param name="targetIp">匹配ip</param>
            <returns>验证成功为True，否则为False</returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.ValidateHelper.InIpList(System.String,System.String[])">
            <summary>
            判断一个ip是否在另一个ip内
            </summary>
            <param name="sourceIp">检测ip</param>
            <param name="targetIpList">匹配ip列表</param>
            <returns>验证成功为True，否则为False</returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.ValidateHelper.InIpList(System.String,System.String)">
            <summary>
            判断一个ip是否在另一个ip内
            </summary>
            <param name="sourceIp">检测ip</param>
            <param name="targetIpStr">匹配ip</param>
            <returns>验证成功为True，否则为False</returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.ValidateHelper.IsDate(System.String)">
            <summary>
            是否为日期
            <param name="s">输入字符</param>
            <returns>验证成功为True，否则为False</returns>
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.ValidateHelper.IsChinese(System.String)">
            <summary>
            判断输入是否为中文 
            </summary>
            <param name="s">输入字符</param>
            <returns>验证成功为True，否则为False</returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.ValidateHelper.ContainsChinese(System.String)">
            <summary>
            是否包含中文
            </summary>
            <param name="s">文本</param>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.ValidateHelper.IsNumber(System.String)">
            <summary>
            是否为数字
            </summary>
            <param name="s">文本</param>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.ValidateHelper.ContainsNumber(System.String)">
            <summary>
            是否包含数字
            </summary>
            <param name="s">文本</param>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.ValidateHelper.IsIntergerOrLetter(System.String)">
            <summary>
            只允许数字或字母的判断
            </summary>
            <param name="s">输入字符</param>
            <returns>验证成功为True，否则为False</returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.ValidateHelper.IsInterger(System.String)">
            <summary>
            判断是不是数字
            </summary>
            <param name="str"></param>
            <returns>验证成功为True，否则为False</returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.ValidateHelper.IsNumeric(System.String)">
            <summary>
            是否是数值(包括整数和小数)
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.ValidateHelper.IsNumericArray(System.String[])">
            <summary>
            是否是数值(包括整数和小数)
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.ValidateHelper.IsNumericRule(System.String,System.String)">
            <summary>
            是否是数值(包括整数和小数)
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.ValidateHelper.IsNumericRule(System.String)">
            <summary>
            是否是数值(包括整数和小数)
            </summary>
        </member>
        <member name="T:HuCheng.Util.Core.Helper.WebHelper">
            <summary>
            Web帮助类
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.WebHelper.HtmlDecode(System.String)">
            <summary>
            HTML解码
            </summary>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.WebHelper.HtmlEncode(System.String)">
            <summary>
            HTML编码
            </summary>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.WebHelper.UrlDecode(System.String)">
            <summary>
            URL解码
            </summary>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.WebHelper.UrlEncode(System.String)">
            <summary>
            URL编码
            </summary>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.WebHelper.UrlEncode(System.String,System.Boolean)">
            <summary>
            对Url进行编码
            </summary>
            <param name="url">url</param>
            <param name="isUpper">编码字符是否转成大写,范例,"http://"转成"http%3A%2F%2F"</param>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.WebHelper.UrlEncode(System.String,System.Text.Encoding,System.Boolean)">
            <summary>
            对Url进行编码
            </summary>
            <param name="url">url</param>
            <param name="encoding">字符编码</param>
            <param name="isUpper">编码字符是否转成大写,范例,"http://"转成"http%3A%2F%2F"</param>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.WebHelper.GetUpperEncode(System.String)">
            <summary>
            获取大写编码字符串
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.WebHelper.DeleteCookie(System.String)">
            <summary>
            删除指定名称的Cookie
            </summary>
            <param name="name">Cookie名称</param>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.WebHelper.GetCookie(System.String)">
            <summary>
            获得指定名称的Cookie值
            </summary>
            <param name="name">Cookie名称</param>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.WebHelper.GetCookie(System.String,System.String)">
            <summary>
            获得指定名称的Cookie中特定键的值
            </summary>
            <param name="name">Cookie名称</param>
            <param name="key">键</param>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.WebHelper.SetCookie(System.String,System.String)">
            <summary>
            设置指定名称的Cookie的值
            </summary>
            <param name="name">Cookie名称</param>
            <param name="value">值</param>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.WebHelper.SetCookie(System.String,System.String,System.Double)">
            <summary>
            设置指定名称的Cookie的值
            </summary>
            <param name="name">Cookie名称</param>
            <param name="value">值</param>
            <param name="expires">过期时间</param>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.WebHelper.SetCookie(System.String,System.String,System.String)">
            <summary>
            设置指定名称的Cookie特定键的值
            </summary>
            <param name="name">Cookie名称</param>
            <param name="key">键</param>
            <param name="value">值</param>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.WebHelper.SetCookie(System.String,System.String,System.String,System.Double)">
            <summary>
            设置指定名称的Cookie特定键的值
            </summary>
            <param name="name">Cookie名称</param>
            <param name="key">键</param>
            <param name="value">值</param>
            <param name="expires">过期时间</param>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.WebHelper.IsGet">
            <summary>
            是否是get请求
            </summary>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.WebHelper.IsPost">
            <summary>
            是否是post请求
            </summary>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.WebHelper.IsAjax">
            <summary>
            是否是Ajax请求
            </summary>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.WebHelper.GetQueryString(System.String,System.String)">
            <summary>
            获得查询字符串中的值
            </summary>
            <param name="key">键</param>
            <param name="defaultValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.WebHelper.GetQueryString(System.String)">
            <summary>
            获得查询字符串中的值
            </summary>
            <param name="key">键</param>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.WebHelper.GetFormString(System.String,System.String)">
            <summary>
            获得表单中的值
            </summary>
            <param name="key">键</param>
            <param name="defaultValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.WebHelper.GetFormString(System.String)">
            <summary>
            获得表单中的值
            </summary>
            <param name="key">键</param>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.WebHelper.GetRequestString(System.String,System.String)">
            <summary>
            获得请求中的值
            </summary>
            <param name="key">键</param>
            <param name="defaultValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.WebHelper.GetRequestString(System.String)">
            <summary>
            获得请求中的值
            </summary>
            <param name="key">键</param>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.WebHelper.GetUrlReferrer">
            <summary>
            获得上次请求的url
            </summary>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.WebHelper.GetHost">
            <summary>
            获得请求的主机部分
            </summary>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.WebHelper.GetUrl">
            <summary>
            获得请求的url
            </summary>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.WebHelper.GetRawUrl">
            <summary>
            获得请求的原始url
            </summary>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.WebHelper.GetBrowserType">
            <summary>
            获得请求的浏览器类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.WebHelper.GetBrowserName">
            <summary>
            获得请求的浏览器名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.WebHelper.GetBrowserVersion">
            <summary>
            获得请求的浏览器版本
            </summary>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.WebHelper.GetOsType">
            <summary>
            获得请求客户端的操作系统类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.WebHelper.GetOsName">
            <summary>
            获得请求客户端的操作系统名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.WebHelper.IsBrowser">
            <summary>
            判断是否是浏览器请求
            </summary>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.WebHelper.IsMobile">
            <summary>
            是否是移动设备请求
            </summary>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.WebHelper.IsCrawler">
            <summary>
            判断是否是搜索引擎爬虫请求
            </summary>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.WebHelper.GetIp">
            <summary>
            获得请求的ip
            </summary>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.WebHelper.GetPortNumber">
            <summary>
            获取端口号
            80、443直接返回空
            其他则返回双引号内的内容“:当前端口号”
            </summary>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.WebHelper.GetMacByNetworkInterface">
            <summary>
            获取Mac地址
            </summary>
            <returns>Mac地址</returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.WebHelper.GetParmList(System.String)">
            <summary>
            获得参数列表
            </summary>
            <param name="data">数据</param>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.WebHelper.GetFormRequestDataUseGet(System.String,System.String,System.String)">
            <summary>
            获得http get请求数据(form表单)
            </summary>
            <param name="url">请求地址</param>
            <param name="requestData">请求数据</param>
            <param name="referer">请求来源</param>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.WebHelper.GetFormRequestDataUseGet(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
            <summary>
            获得http get请求数据(form表单)
            </summary>
            <param name="url">请求地址</param>
            <param name="requestData">请求数据</param>
            <param name="referer">请求来源</param>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.WebHelper.GetFormRequestDataUsePost(System.String,System.String,System.String)">
            <summary>
            获得http post请求数据(form表单)
            </summary>
            <param name="url">请求地址</param>
            <param name="requestData">请求数据</param>
            <param name="referer">请求来源</param>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.WebHelper.GetJsonRequestDataUseGet(System.String,System.String,System.String)">
            <summary>
            获得http get请求数据(json)
            </summary>
            <param name="url">请求地址</param>
            <param name="requestData">请求数据</param>
            <param name="referer">请求来源</param>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.WebHelper.GetJsonRequestDataUsePost(System.String,System.String,System.String)">
            <summary>
            获得http post请求数据(json)
            </summary>
            <param name="url">请求地址</param>
            <param name="requestData">请求数据</param>
            <param name="referer">请求来源</param>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.WebHelper.GetFormRequestData(System.String,System.String,System.String,System.String)">
            <summary>
            获得http请求数据(form表单)
            </summary>
            <param name="url">请求地址</param>
            <param name="method">请求方式</param>
            <param name="requestData">请求数据</param>
            <param name="referer">请求来源</param>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.WebHelper.GetJsonRequestData(System.String,System.String,System.String,System.String)">
            <summary>
            获得http请求数据(json)
            </summary>
            <param name="url">请求地址</param>
            <param name="method">请求方式</param>
            <param name="requestData">请求数据</param>
            <param name="referer">请求来源</param>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.WebHelper.GetRequestData(System.String,System.String,System.String,System.Text.Encoding,System.String,System.String,System.Int32)">
            <summary>
            获得http请求数据
            </summary>
            <param name="url">请求地址</param>
            <param name="method">请求方式</param>
            <param name="requestData">请求数据</param>
            <param name="contentType">内容类型,默认为application/x-www-form-urlencoded</param>
            <param name="encoding">编码</param>
            <param name="timeout">超时值</param>
            <param name="referer">请求来源</param>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.WebHelper.GetRequestData(System.String,System.String,System.String,System.String,System.Text.Encoding,System.Int32,System.String)">
            <summary>
            获得http请求数据
            </summary>
            <param name="url">请求地址</param>
            <param name="method">请求方式</param>
            <param name="requestData">请求数据</param>
            <param name="contentType">内容类型</param>
            <param name="encoding">编码</param>
            <param name="timeout">超时值</param>
            <param name="referer">请求来源</param>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.WebHelper.BuildQuery(System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
            <summary>
            组装普通文本请求参数
            </summary>
            <param name="parameters">Key-Value形式请求参数字典</param>
            <param name="encode">编码格式</param>
            <returns>URL编码后的请求数据</returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.WebHelper.GetTrustLevel">
            <summary>
            获得当前应用程序的信任级别
            </summary>
            <returns></returns>
        </member>
        <member name="P:HuCheng.Util.Core.Helper.WebHelper.Host">
            <summary>
            获取主机名,即域名，
            范例：用户输入网址http://www.a.com/b.htm?a=1&amp;b=2，
            返回值为: www.a.com
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.WebHelper.ResolveUrl(System.String)">
            <summary>
            解析相对Url
            </summary>
            <param name="relativeUrl">相对Url</param>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.WebHelper.SetSession``1(System.String,``0)">
            <summary>
            创建Session
            </summary>
            <typeparam name="T">Session键值的类型</typeparam>
            <param name="key">Session的键名</param>
            <param name="value">Session的键值</param>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.WebHelper.SetSession(System.String,System.String)">
            <summary>
            创建Session
            </summary>
            <param name="key">Session的键名</param>
            <param name="value">Session的键值</param>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.WebHelper.GetSession(System.String)">
            <summary>
            读取Session的值
            </summary>
            <param name="key">Session的键名</param>        
        </member>
        <member name="M:HuCheng.Util.Core.Helper.WebHelper.RemoveSession(System.String)">
            <summary>
            删除指定Session
            </summary>
            <param name="key">Session的键名</param>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.WebHelper.DownloadFile(System.String,System.String)">
            <summary>
            下载文件
            </summary>
            <param name="filePath">文件绝对路径</param>
            <param name="fileName">文件名,包含扩展名</param>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.WebHelper.DownloadFile(System.String,System.String,System.Text.Encoding)">
            <summary>
            下载文件
            </summary>
            <param name="filePath">文件绝对路径</param>
            <param name="fileName">文件名,包含扩展名</param>
            <param name="encoding">字符编码</param>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.WebHelper.DownloadUrl(System.String,System.String)">
            <summary>
            从Http地址下载
            </summary>
            <param name="url">Http地址，范例：http://www.test.com/a.rar </param>
            <param name="fileName">文件名，包括扩展名</param>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.WebHelper.DownloadUrl(System.String,System.String,System.Text.Encoding)">
            <summary>
            从Http地址下载
            </summary>
            <param name="url">Http地址，范例：http://www.test.com/a.rar </param>
            <param name="fileName">文件名，包括扩展名</param>
            <param name="encoding">字符编码</param>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.WebHelper.Download(System.String,System.String)">
            <summary>
            下载
            </summary>
            <param name="text">文本</param>
            <param name="fileName">文件名,包含扩展名</param>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.WebHelper.Download(System.String,System.String,System.Text.Encoding)">
            <summary>
            下载
            </summary>
            <param name="text">文本</param>
            <param name="fileName">文件名,包含扩展名</param>
            <param name="encoding">字符编码</param>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.WebHelper.Download(System.IO.Stream,System.String)">
            <summary>
            下载
            </summary>
            <param name="stream">流</param>
            <param name="fileName">文件名,包含扩展名</param>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.WebHelper.Download(System.IO.Stream,System.String,System.Text.Encoding)">
            <summary>
            下载
            </summary>
            <param name="stream">流</param>
            <param name="fileName">文件名,包含扩展名</param>
            <param name="encoding">字符编码</param>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.WebHelper.Download(System.Byte[],System.String)">
            <summary>
            下载
            </summary>
            <param name="bytes">字节流</param>
            <param name="fileName">文件名,包含扩展名</param>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.WebHelper.Download(System.Byte[],System.String,System.Text.Encoding)">
            <summary>
            下载
            </summary>
            <param name="bytes">字节流</param>
            <param name="fileName">文件名,包含扩展名</param>
            <param name="encoding">字符编码</param>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.WebHelper.GetFileControls">
            <summary>
            获取有效客户端文件控件集合,文件控件必须上传了内容，为空将被忽略,
            注意:Form标记必须加入属性 enctype="multipart/form-data",服务器端才能获取客户端file控件.
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.WebHelper.GetFileControl">
            <summary>
            获取第一个有效客户端文件控件,文件控件必须上传了内容，为空将被忽略,
            注意:Form标记必须加入属性 enctype="multipart/form-data",服务器端才能获取客户端file控件.
            </summary>
        </member>
        <member name="T:HuCheng.Util.Core.Helper.StringHelper">
            <summary>
            字符串帮助类
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.StringHelper.SplitString(System.String,System.String)">
            <summary>
            分割字符串
            </summary>
            <param name="sourceStr">源字符串</param>
            <param name="splitStr">分隔字符串</param>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.StringHelper.SplitString(System.String)">
            <summary>
            分割字符串
            </summary>
            <param name="sourceStr">源字符串</param>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.StringHelper.SubString(System.String,System.Int32,System.Int32)">
            <summary>
            截取字符串
            </summary>
            <param name="sourceStr">源字符串</param>
            <param name="startIndex">开始位置的索引</param>
            <param name="length">子字符串的长度</param>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.StringHelper.SubString(System.String,System.Int32)">
            <summary>
            截取字符串
            </summary>
            <param name="sourceStr">源字符串</param>
            <param name="length">子字符串的长度</param>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.StringHelper.TrimStart(System.String,System.String)">
            <summary>
            移除前导字符串
            </summary>
            <param name="sourceStr">源字符串</param>
            <param name="trimStr">移除字符串</param>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.StringHelper.TrimStart(System.String,System.String,System.Boolean)">
            <summary>
            移除前导字符串
            </summary>
            <param name="sourceStr">源字符串</param>
            <param name="trimStr">移除字符串</param>
            <param name="ignoreCase">是否忽略大小写</param>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.StringHelper.TrimEnd(System.String,System.String)">
            <summary>
            移除后导字符串
            </summary>
            <param name="sourceStr">源字符串</param>
            <param name="trimStr">移除字符串</param>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.StringHelper.TrimEnd(System.String,System.String,System.Boolean)">
            <summary>
            移除后导字符串
            </summary>
            <param name="sourceStr">源字符串</param>
            <param name="trimStr">移除字符串</param>
            <param name="ignoreCase">是否忽略大小写</param>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.StringHelper.Trim(System.String,System.String)">
            <summary>
            移除前导和后导字符串
            </summary>
            <param name="sourceStr">源字符串</param>
            <param name="trimStr">移除字符串</param>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.StringHelper.Trim(System.String,System.String,System.Boolean)">
            <summary>
            移除前导和后导字符串
            </summary>
            <param name="sourceStr">源字符串</param>
            <param name="trimStr">移除字符串</param>
            <param name="ignoreCase">是否忽略大小写</param>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.StringHelper.GetLength(System.String)">
            <summary> 
            获取字符串长度，一个汉字算两个字节 
            </summary> 
            <param name="str"></param> 
            <returns></returns> 
        </member>
        <member name="M:HuCheng.Util.Core.Helper.StringHelper.BubbleSort(System.String[])">
            <summary>
            冒泡排序
            </summary>
            <param name="r"></param>
            <returns></returns>
        </member>
        <!-- 对于成员“M:HuCheng.Util.Core.Helper.StringHelper.BuildParamString(System.String[])”忽略有格式错误的 XML 注释 -->
        <member name="M:HuCheng.Util.Core.Helper.StringHelper.GuidTo16String">
            <summary>
            Guid转16位字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.StringHelper.ToBase64(System.String)">
            <summary>
            Base64转码
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.StringHelper.DecodeBase64(System.String)">
            <summary>
            base64解码
            UTF-8解码
            </summary>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.StringHelper.DecodeBase64(System.String,System.Text.Encoding)">
            <summary>
            base64解码
            </summary>
            <param name="result">待解密字符串</param>
            <param name="encoding">编码格式</param>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.StringHelper.UrlEncode(System.String)">
            <summary>
            UrlEncode
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.StringHelper.HtmlToTxt(System.String)">
            <summary>
            html转文本
            </summary>
            <param name="strHtml"></param>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.StringHelper.Desrialize``1(``0,System.String)">
            <summary>  
            反序列化 二进制流 字符串到对象  
            </summary>  
            <param name="obj">泛型对象</param>  
            <param name="str">要转换为对象的字符串</param>  
            <returns>反序列化出来的对象</returns>  
        </member>
        <member name="M:HuCheng.Util.Core.Helper.StringHelper.ToHexStr(System.Byte[])">
            <summary>
            转换为16进制的字符串形式
            </summary>
            <param name="bytes"></param>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.StringHelper.CmycurD(System.Decimal)">
            <summary> 
            转换人民币大小金额 
            </summary> 
            <param name="num">金额</param> 
            <returns>返回大写形式</returns> 
        </member>
        <member name="M:HuCheng.Util.Core.Helper.StringHelper.GetMasked(System.String,System.Int32,System.Int32)">
            <summary>
            传入开头和结尾需要显示的位数，其他位数隐藏，输入位数超出原本字符串长度不处理
            </summary>
            <param name="str"></param>
            <param name="start"></param>
            <param name="end"></param>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.StringHelper.GetMaskedMobile(System.String)">
            <summary>
            屏蔽手机号中间四位
            可以实现判断输入字符串是否手机号，若是手机号则屏蔽中间四位，否则直接返回
            </summary>
            <param name="mobileNumber"></param>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.StringHelper.GetMaskedConfigValue(System.String)">
            <summary>
            隐藏配置文件wealth_config中pwd类型的string
            </summary>
            <param name="configValue"></param>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.StringHelper.HideEmail(System.String)">
            <summary>
            隐藏邮箱
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.StringHelper.GenerateCode">
            <summary>
            创建一个32位流水号
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.StringHelper.GenerateCodeBy16">
            <summary>
            创建一个16位流水号
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.StringHelper.PinYin(System.String)">
            <summary>
            获取汉字的拼音简码，即首字母缩写,范例：中国,返回zg
            </summary>
            <param name="chineseText">汉字文本,范例： 中国</param>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.StringHelper.ResolvePinYin(System.Char)">
            <summary>
            解析单个汉字的拼音简码
            </summary>
            <param name="text">单个汉字</param>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.StringHelper.ResolvePinYinByCode(System.UInt16)">
            <summary>
            使用字符编码方式获取拼音简码
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.StringHelper.ResolvePinYinByFile(System.String)">
            <summary>
            从拼音简码文件获取
            </summary>
            <param name="text">单个汉字</param>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.StringHelper.Splice``1(System.Collections.Generic.IEnumerable{``0},System.String,System.String)">
            <summary>
            拼接集合元素
            </summary>
            <typeparam name="T">集合元素类型</typeparam>
            <param name="list">集合</param>
            <param name="quotes">引号，默认不带引号，范例：单引号 "'"</param>
            <param name="separator">分隔符，默认使用逗号分隔</param>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.StringHelper.FirstUpper(System.String)">
            <summary>
            将值的首字母大写
            </summary>
            <param name="value">值</param>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.StringHelper.ToCamel(System.String)">
            <summary>
            将字符串转成驼峰形式
            </summary>
            <param name="value">原始字符串</param>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.StringHelper.Distinct(System.String)">
            <summary>
            去除重复
            </summary>
            <param name="value">值，范例1："5555",返回"5",范例2："4545",返回"45"</param>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.StringHelper.Truncate(System.String,System.Int32,System.Int32,System.String)">
            <summary>
            截断字符串
            </summary>
            <param name="text">文本</param>
            <param name="length">返回长度</param>
            <param name="endCharCount">添加结束符号的个数，默认0，不添加</param>
            <param name="endChar">结束符号，默认为省略号</param>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.StringHelper.GetEndString(System.Int32,System.String)">
            <summary>
            获取结束字符串
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.StringHelper.ToSimplifiedChinese(System.String)">
            <summary>
            转换为简体中文
            </summary>
            <param name="text">繁体中文</param>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.StringHelper.ToTraditionalChinese(System.String)">
            <summary>
            转换为繁体中文
            </summary>
            <param name="text">简体中文</param>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.StringHelper.Unique">
            <summary>
            获取全局唯一值
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.StringHelper.GetLastProperty(System.String)">
            <summary>
            获取最后一个属性
            </summary>
            <param name="propertyName">属性名，范例，A.B.C,返回"C"</param>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.StringHelper.GetIndexInArray(System.String,System.String[],System.Boolean)">
            <summary>
            获得字符串在字符串数组中的位置
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.StringHelper.GetIndexInArray(System.String,System.String[])">
            <summary>
            获得字符串在字符串数组中的位置
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.StringHelper.IsInArray(System.String,System.String[],System.Boolean)">
            <summary>
            判断字符串是否在字符串数组中
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.StringHelper.IsInArray(System.String,System.String[])">
            <summary>
            判断字符串是否在字符串数组中
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.StringHelper.IsInArray(System.String,System.String,System.String,System.Boolean)">
            <summary>
            判断字符串是否在字符串中
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.StringHelper.IsInArray(System.String,System.String,System.String)">
            <summary>
            判断字符串是否在字符串中
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.StringHelper.IsInArray(System.String,System.String)">
            <summary>
            判断字符串是否在字符串中
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.StringHelper.ObjectArrayToString(System.String[],System.String)">
            <summary>
            将对象数组拼接成字符串
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.StringHelper.ObjectArrayToString(System.String[])">
            <summary>
            将对象数组拼接成字符串
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.StringHelper.StringArrayToString(System.String[],System.String)">
            <summary>
            将字符串数组拼接成字符串
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.StringHelper.StringArrayToString(System.String[])">
            <summary>
            将字符串数组拼接成字符串
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.StringHelper.IntArrayToString(System.Int32[],System.String)">
            <summary>
            将整数数组拼接成字符串
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.StringHelper.IntArrayToString(System.Int32[])">
            <summary>
            将整数数组拼接成字符串
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.StringHelper.RemoveArrayItem(System.String[],System.String,System.Boolean,System.Boolean)">
            <summary>
            移除数组中的指定项
            </summary>
            <param name="array">源数组</param>
            <param name="removeItem">要移除的项</param>
            <param name="removeBackspace">是否移除空格</param>
            <param name="ignoreCase">是否忽略大小写</param>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.StringHelper.RemoveArrayItem(System.String[])">
            <summary>
            移除数组中的指定项
            </summary>
            <param name="array">源数组</param>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.StringHelper.RemoveStringItem(System.String,System.String)">
            <summary>
            移除字符串中的指定项
            </summary>
            <param name="s">源字符串</param>
            <param name="splitStr">分割字符串</param>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.StringHelper.RemoveStringItem(System.String)">
            <summary>
            移除字符串中的指定项
            </summary>
            <param name="s">源字符串</param>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.StringHelper.RemoveRepeaterItem(System.Int32[])">
            <summary>
            移除数组中的重复项
            </summary>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.StringHelper.RemoveRepeaterItem(System.String[])">
            <summary>
            移除数组中的重复项
            </summary>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.StringHelper.GetUniqueString(System.String)">
            <summary>
            去除字符串中的重复元素
            </summary>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.StringHelper.GetUniqueString(System.String,System.String)">
            <summary>
            去除字符串中的重复元素
            </summary>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.StringHelper.TbbrTrim(System.String)">
            <summary>
            去除字符串首尾处的空格、回车、换行符、制表符
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.StringHelper.ClearTbbr(System.String)">
            <summary>
            去除字符串中的空格、回车、换行符、制表符
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.StringHelper.DeleteNullOrSpaceRow(System.String)">
            <summary>
            删除字符串中的空行
            </summary>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.StringHelper.GetStringLength(System.String)">
            <summary>
            获得字符串的长度,一个汉字的长度为1
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.StringHelper.GetCharCount(System.String,System.Char)">
            <summary>
            获得字符串中指定字符的个数
            </summary>
            <param name="s">字符串</param>
            <param name="c">字符</param>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.StringHelper.IndexOf(System.String,System.Int32)">
            <summary>
            获得指定顺序的字符在字符串中的位置索引
            </summary>
            <param name="s">字符串</param>
            <param name="order">顺序</param>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.StringHelper.IndexOf(System.String,System.Char,System.Int32)">
            <summary>
            获得指定顺序的字符在字符串中的位置索引
            </summary>
            <param name="s">字符串</param>
            <param name="c">字符</param>
            <param name="order">顺序</param>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.StringHelper.ConverBlankToBr(System.String)">
            <summary>
            转换换行为br
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.StringHelper.GetEmailProvider(System.String)">
             <summary>
            获得邮箱提供者
             </summary>
             <param name="email">邮箱</param>
             <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.StringHelper.EscapeRegex(System.String)">
            <summary>
            转义正则表达式
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.StringHelper.ConvertIpToLong(System.String)">
            <summary>
            将ip地址转换成long类型
            </summary>
            <param name="ip">ip</param>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.StringHelper.ReplaceStringVar(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            自动替换变量 把如 "{{varName}}" 替换成对应的数值
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Helper.StringHelper.ReplaceStringVarByRegex(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Text.RegularExpressions.Regex)">
            <summary>
            根据正则表达式将变量替换成对应的数值
            </summary>
        </member>
        <member name="T:HuCheng.Util.Core.Images.ImageInfo">
            <summary>
            图片信息
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Images.ImageInfo.#ctor(System.String,System.Byte[],System.Nullable{System.Int64},System.Int32,System.Int32,System.String)">
            <summary>
            初始化图片信息
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Images.ImageInfo.Create(System.String,System.Nullable{System.Int64},System.Int32,System.Int32,System.String)">
            <summary>
            初始化图片信息
            </summary>
            <param name="filePath">文件相对路径</param>
            <param name="fileSize">文件大小</param>
            <param name="width">宽度</param>
            <param name="height">高度</param>
            <param name="fileName">文件名</param>
        </member>
        <member name="M:HuCheng.Util.Core.Images.ImageInfo.Create(System.String,System.Byte[],System.Int32,System.Int32,System.String)">
            <summary>
            初始化图片信息
            </summary>
            <param name="filePath">文件相对路径</param>
            <param name="fileBytes">文件字节流</param>
            <param name="width">宽度</param>
            <param name="height">高度</param>
            <param name="fileName">文件名</param>
        </member>
        <member name="P:HuCheng.Util.Core.Images.ImageInfo.Size">
            <summary>
            尺寸
            </summary>
        </member>
        <member name="T:HuCheng.Util.Core.Logs.ILog">
            <summary>
            日志操作
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Logs.ILog.Debug(System.String,System.String,System.Exception)">
            <summary>
            调试
            </summary>
            <param name="method">方法名称</param>
            <param name="msg">信息</param>
            <param name="ex">异常</param>
        </member>
        <member name="M:HuCheng.Util.Core.Logs.ILog.Debug(System.String,System.String,System.String,System.Exception)">
            <summary>
            调试
            </summary>
            <param name="method">方法名称</param>
            <param name="reqData">请求数据</param>
            <param name="msg">信息</param>
            <param name="ex">异常</param>
        </member>
        <member name="M:HuCheng.Util.Core.Logs.ILog.Info(System.String,System.String,System.Exception)">
            <summary>
            信息
            </summary>
            <param name="method">方法名称</param>
            <param name="msg">信息</param>
            <param name="ex">异常</param>
        </member>
        <member name="M:HuCheng.Util.Core.Logs.ILog.Info(System.String,System.String,System.String,System.Exception)">
            <summary>
            信息
            </summary>
            <param name="method">方法名称</param>
            <param name="reqData">请求数据</param>
            <param name="msg">信息</param>
            <param name="ex">异常</param>
        </member>
        <member name="M:HuCheng.Util.Core.Logs.ILog.Warn(System.String,System.String,System.Exception)">
            <summary>
            警告
            </summary>
            <param name="method">方法名称</param>
            <param name="msg">信息</param>
            <param name="ex">异常</param>
        </member>
        <member name="M:HuCheng.Util.Core.Logs.ILog.Warn(System.String,System.String,System.String,System.Exception)">
            <summary>
            警告
            </summary>
            <param name="method">方法名称</param>
            <param name="reqData">请求数据</param>
            <param name="msg">信息</param>
            <param name="ex">异常</param>
        </member>
        <member name="M:HuCheng.Util.Core.Logs.ILog.Error(System.String,System.String,System.Exception)">
            <summary>
            错误
            </summary>
            <param name="method">方法名称</param>
            <param name="msg">信息</param>
            <param name="ex">异常</param>
        </member>
        <member name="M:HuCheng.Util.Core.Logs.ILog.Error(System.String,System.String,System.String,System.Exception)">
            <summary>
            错误
            </summary>
            <param name="method">方法名称</param>
            <param name="reqData">请求数据</param>
            <param name="msg">信息</param>
            <param name="ex">异常</param>
        </member>
        <member name="M:HuCheng.Util.Core.Logs.ILog.Fatal(System.String,System.String,System.Exception)">
            <summary>
            致命错误
            </summary>
            <param name="method">方法名称</param>
            <param name="msg">信息</param>
            <param name="ex">异常</param>
        </member>
        <member name="M:HuCheng.Util.Core.Logs.ILog.Fatal(System.String,System.String,System.String,System.Exception)">
            <summary>
            致命错误
            </summary>
            <param name="method">方法名称</param>
            <param name="reqData">请求数据</param>
            <param name="msg">信息</param>
            <param name="ex">异常</param>
        </member>
        <member name="T:HuCheng.Util.Core.Logs.LogLevel">
            <summary>
            日志级别
            </summary>
        </member>
        <member name="F:HuCheng.Util.Core.Logs.LogLevel.Fatal">
            <summary>
            致命错误
            </summary>
        </member>
        <member name="F:HuCheng.Util.Core.Logs.LogLevel.Error">
            <summary>
            错误
            </summary>
        </member>
        <member name="F:HuCheng.Util.Core.Logs.LogLevel.Warning">
            <summary>
            警告
            </summary>
        </member>
        <member name="F:HuCheng.Util.Core.Logs.LogLevel.Information">
            <summary>
            信息
            </summary>
        </member>
        <member name="F:HuCheng.Util.Core.Logs.LogLevel.Debug">
            <summary>
            调试
            </summary>
        </member>
        <member name="T:HuCheng.Util.Core.Offices.CellHead">
            <summary>
            Excel表头类
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.Offices.CellHead.Head">
            <summary>
            Excel头部列
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.Offices.CellHead.ColumnWidth">
            <summary>
            头部列表宽度
            </summary>
        </member>
        <member name="T:HuCheng.Util.Core.Offices.Cell">
            <summary>
            单元格
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Offices.Cell.#ctor(System.Object,System.Int32,System.Int32)">
            <summary>
            初始化单元格
            </summary>
            <param name="value">值</param>
            <param name="columnSpan">列跨度</param>
            <param name="rowSpan">行跨度</param>
        </member>
        <member name="P:HuCheng.Util.Core.Offices.Cell.Row">
            <summary>
            行
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.Offices.Cell.Value">
            <summary>
            值
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.Offices.Cell.ColumnSpan">
            <summary>
            列跨度
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.Offices.Cell.RowSpan">
            <summary>
            行跨度
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.Offices.Cell.RowIndex">
            <summary>
            行索引
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.Offices.Cell.ColumnIndex">
            <summary>
            列索引
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.Offices.Cell.EndRowIndex">
            <summary>
            结束行索引
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.Offices.Cell.EndColumnIndex">
            <summary>
            结束列索引
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.Offices.Cell.NeedMerge">
            <summary>
            是否需要合并单元格
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.Offices.Cell.Null">
            <summary>
            创建空单元格
            </summary>
        </member>
        <member name="T:HuCheng.Util.Core.Offices.CellStyle">
            <summary>
            单元格样式
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Offices.CellStyle.#ctor">
            <summary>
            初始化单元格样式
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.Offices.CellStyle.Alignment">
            <summary>
            水平对齐
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.Offices.CellStyle.VerticalAlignment">
            <summary>
            垂直对齐
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.Offices.CellStyle.BackgroundColor">
            <summary>
            背景色
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.Offices.CellStyle.FillPattern">
            <summary>
            填充模式
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.Offices.CellStyle.BorderColor">
            <summary>
            边框色
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.Offices.CellStyle.FontSize">
            <summary>
            字号
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.Offices.CellStyle.FontColor">
            <summary>
            字体颜色
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.Offices.CellStyle.FontBoldWeight">
            <summary>
            字体加粗
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.Offices.CellStyle.IsWrap">
            <summary>
            内容是否自动换行
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Offices.CellStyle.Head">
            <summary>
            创建表头样式
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Offices.CellStyle.Body">
            <summary>
            创建正文样式
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Offices.CellStyle.Foot">
            <summary>
            创建页脚样式
            </summary>
        </member>
        <member name="T:HuCheng.Util.Core.Offices.Color">
            <summary>
            颜色
            </summary>
        </member>
        <member name="T:HuCheng.Util.Core.Offices.FillPattern">
            <summary>
            填充模式
            </summary>
        </member>
        <member name="T:HuCheng.Util.Core.Offices.HorizontalAlignment">
            <summary>
            水平对齐
            </summary>
        </member>
        <member name="F:HuCheng.Util.Core.Offices.HorizontalAlignment.Left">
            <summary>
            左对齐
            </summary>
        </member>
        <member name="F:HuCheng.Util.Core.Offices.HorizontalAlignment.Right">
            <summary>
            右对齐
            </summary>
        </member>
        <member name="F:HuCheng.Util.Core.Offices.HorizontalAlignment.Center">
            <summary>
            居中对齐
            </summary>
        </member>
        <member name="T:HuCheng.Util.Core.Offices.IExcel">
            <summary>
            Excel操作
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Offices.IExcel.CreateWorkbook">
            <summary>
            创建工作薄
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Offices.IExcel.CreateSheet(System.String)">
            <summary>
            创建工作表
            </summary>
            <param name="sheetName">工作表名称</param>
        </member>
        <member name="M:HuCheng.Util.Core.Offices.IExcel.CreateRow(System.Int32)">
            <summary>
            创建行
            </summary>
            <param name="rowIndex">行索引</param>
        </member>
        <member name="M:HuCheng.Util.Core.Offices.IExcel.CreateCell(HuCheng.Util.Core.Offices.Cell)">
            <summary>
            创建单元格
            </summary>
            <param name="cell">单元格</param>
        </member>
        <member name="M:HuCheng.Util.Core.Offices.IExcel.Write(System.IO.Stream)">
            <summary>
            写入流
            </summary>
            <param name="stream">流</param>
        </member>
        <member name="M:HuCheng.Util.Core.Offices.IExcel.DateFormat(System.String)">
            <summary>
            设置日期格式
            </summary>
            <param name="format">日期格式，默认"yyyy-mm-dd"</param>
        </member>
        <member name="M:HuCheng.Util.Core.Offices.IExcel.MergeCell(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            合并单元格
            </summary>
            <param name="startRowIndex">起始行索引</param>
            <param name="endRowIndex">结束行索引</param>
            <param name="startColumnIndex">起始列索引</param>
            <param name="endColumnIndex">结束列索引</param>
        </member>
        <member name="M:HuCheng.Util.Core.Offices.IExcel.MergeCell(HuCheng.Util.Core.Offices.Cell)">
            <summary>
            合并单元格
            </summary>
            <param name="cell">单元格</param>
        </member>
        <member name="M:HuCheng.Util.Core.Offices.IExcel.HeadStyle(HuCheng.Util.Core.Offices.Table,HuCheng.Util.Core.Offices.CellStyle)">
            <summary>
            设置表头样式
            </summary>
            <param name="table">表格</param>
            <param name="style">单元格样式</param>
        </member>
        <member name="M:HuCheng.Util.Core.Offices.IExcel.BodyStyle(HuCheng.Util.Core.Offices.Table,HuCheng.Util.Core.Offices.CellStyle)">
            <summary>
            设置正文样式
            </summary>
            <param name="table">表格</param>
            <param name="style">单元格样式</param>
        </member>
        <member name="M:HuCheng.Util.Core.Offices.IExcel.FootStyle(HuCheng.Util.Core.Offices.Table,HuCheng.Util.Core.Offices.CellStyle)">
            <summary>
            设置页脚样式
            </summary>
            <param name="table">表格</param>
            <param name="style">单元格样式</param>
        </member>
        <member name="M:HuCheng.Util.Core.Offices.IExcel.ColumnWidth(System.Int32,System.Int32)">
            <summary>
            列宽
            </summary>
            <param name="columnIndex">列索引</param>
            <param name="width">列宽度，设置字符数</param>
        </member>
        <member name="T:HuCheng.Util.Core.Offices.IndexManager">
            <summary>
            索引管理器
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Offices.IndexManager.#ctor">
            <summary>
            初始化索引管理器
            </summary>
        </member>
        <member name="F:HuCheng.Util.Core.Offices.IndexManager._list">
            <summary>
            索引列表
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Offices.IndexManager.GetIndex(System.Int32)">
            <summary>
            获取索引
            </summary>
            <param name="span">跨度</param>
        </member>
        <member name="M:HuCheng.Util.Core.Offices.IndexManager.AddIndex(System.Int32,System.Int32)">
            <summary>
            添加索引
            </summary>
            <param name="index">索引</param>
            <param name="span">跨度</param>
        </member>
        <member name="M:HuCheng.Util.Core.Offices.IndexManager.AddIndex(HuCheng.Util.Core.Offices.IndexRange,System.Int32,System.Int32)">
            <summary>
            添加索引
            </summary>
        </member>
        <member name="T:HuCheng.Util.Core.Offices.IndexRange">
            <summary>
            索引范围
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Offices.IndexRange.#ctor(System.Int32,System.Int32)">
            <summary>
            初始化索引范围
            </summary>
            <param name="index">当前索引</param>
            <param name="endIndex">结束索引</param>
        </member>
        <member name="P:HuCheng.Util.Core.Offices.IndexRange.Index">
            <summary>
            当前索引
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.Offices.IndexRange.EndIndex">
            <summary>
            结束索引
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Offices.IndexRange.GetIndex(System.Int32)">
            <summary>
            获取索引
            </summary>
            <param name="span">跨度</param>
        </member>
        <member name="M:HuCheng.Util.Core.Offices.IndexRange.Contains(System.Int32)">
            <summary>
            判断是否包含该索引
            </summary>
            <param name="index">索引</param>
        </member>
        <member name="M:HuCheng.Util.Core.Offices.IndexRange.Split(System.Int32,System.Int32)">
            <summary>
            分割索引范围
            </summary>
            <param name="index">索引</param>
            <param name="span">跨度</param>
        </member>
        <member name="P:HuCheng.Util.Core.Offices.IndexRange.IsEnd">
            <summary>
            是否已结束
            </summary>
        </member>
        <member name="T:HuCheng.Util.Core.Offices.NullCell">
            <summary>
            空单元格
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Offices.NullCell.#ctor">
            <summary>
            初始化空单元格
            </summary>
        </member>
        <member name="T:HuCheng.Util.Core.Offices.Range">
            <summary>
            区
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Offices.Range.#ctor(System.Int32)">
            <summary>
            初始化区
            </summary>
            <param name="startIndex">起始索引</param>
        </member>
        <member name="F:HuCheng.Util.Core.Offices.Range._rows">
            <summary>
            行集
            </summary>
        </member>
        <member name="F:HuCheng.Util.Core.Offices.Range._startIndex">
            <summary>
            起始索引
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.Offices.Range.Item(System.Int32)">
            <summary>
            获取行
            </summary>
            <param name="index">索引</param>
        </member>
        <member name="M:HuCheng.Util.Core.Offices.Range.GetRow(System.Int32)">
            <summary>
            获取行
            </summary>
            <param name="index">外部索引</param>
        </member>
        <member name="P:HuCheng.Util.Core.Offices.Range.ColumnNumber">
            <summary>
            列数
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.Offices.Range.Count">
            <summary>
            行数
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Offices.Range.GetRows">
            <summary>
            获取行
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Offices.Range.AddRow(System.Int32,System.Collections.Generic.IEnumerable{HuCheng.Util.Core.Offices.Cell})">
            <summary>
            添加行
            </summary>
            <param name="rowIndex">行索引</param>
            <param name="cells">单元格集合</param>
        </member>
        <member name="M:HuCheng.Util.Core.Offices.Range.CreateRow(System.Int32)">
            <summary>
            创建行
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Offices.Range.AddCell(HuCheng.Util.Core.Offices.Row,HuCheng.Util.Core.Offices.Cell,System.Int32)">
            <summary>
            添加单元格
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Offices.Range.AddPlaceholderCell(HuCheng.Util.Core.Offices.Cell,System.Int32)">
            <summary>
            为下方受rowspan影响的行添加占位单元格
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Offices.Range.Clear">
            <summary>
            清空
            </summary>
        </member>
        <member name="T:HuCheng.Util.Core.Offices.Row">
            <summary>
            行
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Offices.Row.#ctor(System.Int32)">
            <summary>
            初始化行
            </summary>
            <param name="rowIndex">行索引</param>
        </member>
        <member name="F:HuCheng.Util.Core.Offices.Row._indexManager">
            <summary>
            索引管理器
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.Offices.Row.Cells">
            <summary>
            单元格列表
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.Offices.Row.Item(System.Int32)">
            <summary>
            获取单元格
            </summary>
            <param name="index">索引</param>
        </member>
        <member name="P:HuCheng.Util.Core.Offices.Row.ColumnNumber">
            <summary>
            列数
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.Offices.Row.RowIndex">
            <summary>
            行索引
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Offices.Row.Add(System.Object,System.Int32,System.Int32)">
            <summary>
            添加单元格
            </summary>
            <param name="value">值</param>
            <param name="columnSpan">列跨度</param>
            <param name="rowSpan">行跨度</param>
        </member>
        <member name="M:HuCheng.Util.Core.Offices.Row.Add(HuCheng.Util.Core.Offices.Cell)">
            <summary>
            添加单元格
            </summary>
            <param name="cell">单元格</param>
        </member>
        <member name="M:HuCheng.Util.Core.Offices.Row.SetColumnIndex(HuCheng.Util.Core.Offices.Cell)">
            <summary>
            设置列索引
            </summary>
        </member>
        <member name="T:HuCheng.Util.Core.Offices.Table">
            <summary>
            表格
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Offices.Table.#ctor">
            <summary>
            初始化表格
            </summary>
        </member>
        <member name="F:HuCheng.Util.Core.Offices.Table._header">
            <summary>
            头部
            </summary>
        </member>
        <member name="F:HuCheng.Util.Core.Offices.Table._body">
            <summary>
            正文
            </summary>
        </member>
        <member name="F:HuCheng.Util.Core.Offices.Table._footer">
            <summary>
            底部
            </summary>
        </member>
        <member name="F:HuCheng.Util.Core.Offices.Table._rowIndex">
            <summary>
            当前行索引
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.Offices.Table.Title">
            <summary>
            总标题
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.Offices.Table.ColumnNumber">
            <summary>
            列数
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.Offices.Table.HeadRowCount">
            <summary>
            表头行数
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.Offices.Table.BodyRowCount">
            <summary>
            正文行数
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.Offices.Table.FootRowCount">
            <summary>
            页脚行数
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.Offices.Table.Count">
            <summary>
            总行数
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Offices.Table.GetHeader">
            <summary>
            获取表头
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Offices.Table.GetBody">
            <summary>
            获取表格正文
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Offices.Table.GetFooter">
            <summary>
            获取页脚
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Offices.Table.AddHeadRow(System.String[])">
            <summary>
            添加表头
            </summary>
            <param name="titles">标题</param>
        </member>
        <member name="M:HuCheng.Util.Core.Offices.Table.AddHeadRow(HuCheng.Util.Core.Offices.Cell[])">
            <summary>
            添加表头
            </summary>
            <param name="cells">表头</param>
        </member>
        <member name="M:HuCheng.Util.Core.Offices.Table.AddRowToHeader(System.Collections.Generic.IEnumerable{HuCheng.Util.Core.Offices.Cell})">
            <summary>
            添加表头行
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Offices.Table.ResetFirstColumnSpan">
            <summary>
            重置第一行的列跨度，第一行可能为总标题
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Offices.Table.AddBodyRow(System.Object[])">
            <summary>
            添加正文
            </summary>
            <param name="cellValues">值</param>
        </member>
        <member name="M:HuCheng.Util.Core.Offices.Table.AddBodyRow(System.Collections.Generic.IEnumerable{HuCheng.Util.Core.Offices.Cell})">
            <summary>
            添加正文
            </summary>
            <param name="cells">单元格集合</param>
        </member>
        <member name="M:HuCheng.Util.Core.Offices.Table.GetBodyRange">
            <summary>
            获取正文区域
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Offices.Table.AddFootRow(System.String[])">
            <summary>
            添加页脚
            </summary>
            <param name="cellValues">值</param>
        </member>
        <member name="M:HuCheng.Util.Core.Offices.Table.AddFootRow(HuCheng.Util.Core.Offices.Cell[])">
            <summary>
            添加页脚
            </summary>
            <param name="cells">单元格集合</param>
        </member>
        <member name="M:HuCheng.Util.Core.Offices.Table.GetFootRange">
            <summary>
            获取页脚区域
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Offices.Table.ClearHeader">
            <summary>
            清空表头
            </summary>
        </member>
        <member name="T:HuCheng.Util.Core.Offices.VerticalAlignment">
            <summary>
            垂直对齐
            </summary>
        </member>
        <member name="F:HuCheng.Util.Core.Offices.VerticalAlignment.Top">
            <summary>
            顶部对齐
            </summary>
        </member>
        <member name="F:HuCheng.Util.Core.Offices.VerticalAlignment.Bottom">
            <summary>
            底部对齐
            </summary>
        </member>
        <member name="F:HuCheng.Util.Core.Offices.VerticalAlignment.Center">
            <summary>
            居中对齐
            </summary>
        </member>
        <member name="T:HuCheng.Util.Core.Randoms.AliasMethod">
            <summary>
            离散算法实现概率计算
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Randoms.AliasMethod.#ctor(System.Collections.Generic.IList{System.Double})">
            <summary>
            概率计算
            </summary>
            <param name="probabilities"></param>
        </member>
        <member name="M:HuCheng.Util.Core.Randoms.AliasMethod.Next">
             Samples a value from the underlying distribution.
            
             @return A random value sampled from the underlying distribution.
            <summary>
            随机下一次奖品
            </summary>
            <returns></returns>
        </member>
        <member name="T:HuCheng.Util.Core.Randoms.RandomHelper">
            <summary>
            随机数帮助类
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Randoms.RandomHelper.CreateRandomValue(System.Int32,System.Boolean)">
            <summary>
            创建随机值
            </summary>
            <param name="length">长度</param>
            <param name="onlyNumber">是否只包含数字</param>
            <returns>随机值</returns>
        </member>
        <member name="M:HuCheng.Util.Core.Randoms.RandomHelper.GetNoncestr">
            <summary>
            随机生成Noncestr
            </summary>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Randoms.RandomHelper.BuildRandomStr(System.Int32)">
            <summary>
            取随机数
            </summary>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:HuCheng.Util.Core.Randoms.RandomHelper.BuildDailyRandomStr(System.Int32)">
            <summary>
            创建当天内不会重复的数字
            </summary>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="T:HuCheng.Util.Core.Security.Tokens.ITokenService">
            <summary>
            Token服务
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Security.Tokens.ITokenService.CreateToken``1(System.String,``0,System.Int32)">
            <summary>
            创建用户token
            </summary>
            <param name="signKey">签名密钥</param>
            <param name="userInfo">用户信息</param>
            <param name="expirateTime">秒数，默认为2个小时</param>
            <returns>用户token</returns>
        </member>
        <member name="M:HuCheng.Util.Core.Security.Tokens.ITokenService.CreateAdminToken``1(System.String,``0,System.Int32)">
            <summary>
            创建系统管理员token
            </summary>
            <param name="signKey">签名密钥</param>
            <param name="adminInfo">系统管理员信息</param>
            <param name="expirateTime">秒数，默认为2个小时</param>
            <returns>系统管理员token</returns>
        </member>
        <member name="M:HuCheng.Util.Core.Security.Tokens.ITokenService.CreateStoreManagerToken``1(System.String,``0,System.Int32)">
            <summary>
            创建门店管理员token
            </summary>
            <param name="signKey">签名密钥</param>
            <param name="storeManagerInfo">门店管理员信息</param>
            <param name="expirateTime">秒数，默认为2个小时</param>
            <returns>门店管理员token</returns>
        </member>
        <member name="T:HuCheng.Util.Core.Security.Tokens.Payload">
            <summary>
             表示jwt的payload
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.Security.Tokens.Payload.Exp">
            <summary>
            过期时间
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.Security.Tokens.Payload.UserInfo">
            <summary>
            用户信息
            </summary>
        </member>
        <member name="T:HuCheng.Util.Core.Security.Tokens.AdminPayload">
            <summary>
             表示jwt的payload
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.Security.Tokens.AdminPayload.Exp">
            <summary>
            过期时间
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.Security.Tokens.AdminPayload.AdminInfo">
            <summary>
            管理员信息
            </summary>
        </member>
        <member name="T:HuCheng.Util.Core.Security.Tokens.UserInfo">
            <summary>
            用户信息
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.Security.Tokens.UserInfo.UId">
            <summary>
            用户Id
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.Security.Tokens.UserInfo.UserName">
            <summary>
            用户名 
            </summary>
        </member>
        <member name="T:HuCheng.Util.Core.Security.Tokens.AdminInfo">
            <summary>
            管理员信息
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.Security.Tokens.AdminInfo.AdminId">
            <summary>
            管理员用户Id
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.Security.Tokens.AdminInfo.AdminName">
            <summary>
            管理员名
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.Security.Tokens.AdminInfo.AdminGroupId">
            <summary>  
            管理员组Id
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.Security.Tokens.AdminInfo.IsSystemAdmin">
            <summary>
            是否是系统管理员
            </summary>
        </member>
        <member name="T:HuCheng.Util.Core.Security.Tokens.StoreManagerInfo">
            <summary>
            店长信息
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.Security.Tokens.StoreManagerInfo.StoreManagerId">
            <summary>
            店长管理员Id
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.Security.Tokens.StoreManagerInfo.StoreManagerName">
            <summary>
            店长管理员名
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.Security.Tokens.StoreManagerInfo.AdminGroupId">
            <summary>  
            管理员组Id
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.Security.Tokens.StoreManagerInfo.StoreId">
            <summary>  
            门店Id
            </summary>
        </member>
        <member name="T:HuCheng.Util.Core.TypeConvert.Conv">
            <summary>
            类型转换
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.TypeConvert.Conv.ToInt(System.Object)">
            <summary>
            转换为整型
            </summary>
            <param name="data">数据</param>
        </member>
        <member name="M:HuCheng.Util.Core.TypeConvert.Conv.ToIntOrNull(System.Object)">
            <summary>
            转换为可空整型
            </summary>
            <param name="data">数据</param>
        </member>
        <member name="M:HuCheng.Util.Core.TypeConvert.Conv.ToDouble(System.Object)">
            <summary>
            转换为双精度浮点数
            </summary>
            <param name="data">数据</param>
        </member>
        <member name="M:HuCheng.Util.Core.TypeConvert.Conv.ToDouble(System.Object,System.Int32)">
            <summary>
            转换为双精度浮点数,并按指定的小数位4舍5入
            </summary>
            <param name="data">数据</param>
            <param name="digits">小数位数</param>
        </member>
        <member name="M:HuCheng.Util.Core.TypeConvert.Conv.ToDoubleOrNull(System.Object)">
            <summary>
            转换为可空双精度浮点数
            </summary>
            <param name="data">数据</param>
        </member>
        <member name="M:HuCheng.Util.Core.TypeConvert.Conv.ToDecimal(System.Object)">
            <summary>
            转换为高精度浮点数
            </summary>
            <param name="data">数据</param>
        </member>
        <member name="M:HuCheng.Util.Core.TypeConvert.Conv.ToDecimal(System.Object,System.Int32)">
            <summary>
            转换为高精度浮点数,并按指定的小数位4舍5入
            </summary>
            <param name="data">数据</param>
            <param name="digits">小数位数</param>
        </member>
        <member name="M:HuCheng.Util.Core.TypeConvert.Conv.ToDecimalOrNull(System.Object)">
            <summary>
            转换为可空高精度浮点数
            </summary>
            <param name="data">数据</param>
        </member>
        <member name="M:HuCheng.Util.Core.TypeConvert.Conv.ToDecimalOrNull(System.Object,System.Int32)">
            <summary>
            转换为可空高精度浮点数,并按指定的小数位4舍5入
            </summary>
            <param name="data">数据</param>
            <param name="digits">小数位数</param>
        </member>
        <member name="M:HuCheng.Util.Core.TypeConvert.Conv.ToGuid(System.Object)">
            <summary>
            转换为Guid
            </summary>
            <param name="data">数据</param>
        </member>
        <member name="M:HuCheng.Util.Core.TypeConvert.Conv.ToGuidOrNull(System.Object)">
            <summary>
            转换为可空Guid
            </summary>
            <param name="data">数据</param>
        </member>
        <member name="M:HuCheng.Util.Core.TypeConvert.Conv.ToGuidList(System.String)">
            <summary>
            转换为Guid集合
            </summary>
            <param name="list">guid集合字符串，范例:83B0233C-A24F-49FD-8083-1337209EBC9A,EAB523C6-2FE7-47BE-89D5-C6D440C3033A</param>
        </member>
        <member name="M:HuCheng.Util.Core.TypeConvert.Conv.ToDate(System.Object)">
            <summary>
            转换为日期
            </summary>
            <param name="data">数据</param>
        </member>
        <member name="M:HuCheng.Util.Core.TypeConvert.Conv.ToDateOrNull(System.Object)">
            <summary>
            转换为可空日期
            </summary>
            <param name="data">数据</param>
        </member>
        <member name="M:HuCheng.Util.Core.TypeConvert.Conv.ToBool(System.Object)">
            <summary>
            转换为布尔值
            </summary>
            <param name="data">数据</param>
        </member>
        <member name="M:HuCheng.Util.Core.TypeConvert.Conv.GetBool(System.Object)">
            <summary>
            获取布尔值
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.TypeConvert.Conv.ToBoolOrNull(System.Object)">
            <summary>
            转换为可空布尔值
            </summary>
            <param name="data">数据</param>
        </member>
        <member name="M:HuCheng.Util.Core.TypeConvert.Conv.ToString(System.Object)">
            <summary>
            转换为字符串
            </summary>
            <param name="data">数据</param>
        </member>
        <member name="M:HuCheng.Util.Core.TypeConvert.Conv.To``1(System.Object)">
            <summary>
            转换为目标元素
            </summary>
            <typeparam name="T">目标类型</typeparam>
            <param name="data">数据</param>
        </member>
        <member name="M:HuCheng.Util.Core.TypeConvert.Conv.ToList``1(System.String)">
            <summary>
            转换为目标元素集合
            </summary>
            <typeparam name="T">目标元素类型</typeparam>
            <param name="list">元素集合字符串，范例:83B0233C-A24F-49FD-8083-1337209EBC9A,EAB523C6-2FE7-47BE-89D5-C6D440C3033A</param>
        </member>
        <member name="T:HuCheng.Util.Core.Lambdas.ExpressionBuilder`1">
            <summary>
            表达式生成器
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Lambdas.ExpressionBuilder`1.#ctor">
            <summary>
            初始化表达式生成器
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.Lambdas.ExpressionBuilder`1.Parameter">
            <summary>
            参数
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Lambdas.ExpressionBuilder`1.GetParameter">
            <summary>
            获取参数
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Lambdas.ExpressionBuilder`1.Create``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},HuCheng.Util.Core.Expressions.Operator,System.Object)">
            <summary>
            创建表达式
            </summary>
            <param name="property">属性表达式</param>
            <param name="operator">运算符</param>
            <param name="value">值</param>
        </member>
        <member name="M:HuCheng.Util.Core.Lambdas.ExpressionBuilder`1.ToLambda(System.Linq.Expressions.Expression)">
            <summary>
            转换为Lambda表达式
            </summary>
            <param name="expression">表达式</param>
        </member>
        <member name="T:HuCheng.Util.Core.Lambdas.Lambda">
            <summary>
            Lambda表达式操作
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Lambdas.Lambda.GetMember(System.Linq.Expressions.Expression)">
            <summary>
            获取成员
            </summary>
            <param name="expression">表达式,范例：t => t.Name</param>
        </member>
        <member name="M:HuCheng.Util.Core.Lambdas.Lambda.GetMemberExpression(System.Linq.Expressions.Expression)">
            <summary>
            获取成员表达式
            </summary>
            <param name="expression">表达式</param>
        </member>
        <member name="M:HuCheng.Util.Core.Lambdas.Lambda.GetName(System.Linq.Expressions.Expression)">
            <summary>
            获取成员名称，范例：t => t.Name,返回 Name
            </summary>
            <param name="expression">表达式,范例：t => t.Name</param>
        </member>
        <member name="M:HuCheng.Util.Core.Lambdas.Lambda.GetMemberName(System.Linq.Expressions.MemberExpression)">
            <summary>
            获取成员名称
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Lambdas.Lambda.GetNames``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object[]}})">
            <summary>
            获取名称列表
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="expression">属性集合表达式,范例：t => new object[]{t.A,t.B}</param>
        </member>
        <member name="M:HuCheng.Util.Core.Lambdas.Lambda.AddName(System.Collections.Generic.List{System.String},System.Linq.Expressions.Expression)">
            <summary>
            添加名称
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Lambdas.Lambda.GetValue(System.Linq.Expressions.Expression)">
            <summary>
            获取值,范例：t => t.Name == "A",返回 A
            </summary>
            <param name="expression">表达式,范例：t => t.Name == "A"</param>
        </member>
        <member name="M:HuCheng.Util.Core.Lambdas.Lambda.GetMemberValue(System.Linq.Expressions.MemberExpression)">
            <summary>
            获取属性表达式的值
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Lambdas.Lambda.GetConstantExpressionValue(System.Linq.Expressions.Expression)">
            <summary>
            获取常量表达式的值
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Lambdas.Lambda.GetParameter(System.Linq.Expressions.Expression)">
            <summary>
            获取参数，范例：t.Name,返回 t
            </summary>
            <param name="expression">表达式，范例：t.Name</param>
        </member>
        <member name="M:HuCheng.Util.Core.Lambdas.Lambda.GetAttribute``1(System.Linq.Expressions.Expression)">
            <summary>
            获取特性
            </summary>
            <typeparam name="TAttribute">特性类型</typeparam>
            <param name="expression">属性表达式</param>
        </member>
        <member name="M:HuCheng.Util.Core.Lambdas.Lambda.GetAttribute``3(System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            获取特性
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
            <typeparam name="TProperty">属性类型</typeparam>
            <typeparam name="TAttribute">特性类型</typeparam>
            <param name="propertyExpression">属性表达式</param>
        </member>
        <member name="M:HuCheng.Util.Core.Lambdas.Lambda.GetAttribute``2(System.Linq.Expressions.Expression{System.Func{``0}})">
            <summary>
            获取特性
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <typeparam name="TAttribute">特性类型</typeparam>
            <param name="propertyExpression">属性表达式</param>
        </member>
        <member name="M:HuCheng.Util.Core.Lambdas.Lambda.GetAttributes``3(System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            获取特性列表
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
            <typeparam name="TProperty">属性类型</typeparam>
            <typeparam name="TAttribute">特性类型</typeparam>
            <param name="propertyExpression">属性表达式</param>
        </member>
        <member name="M:HuCheng.Util.Core.Lambdas.Lambda.Constant(System.Linq.Expressions.Expression,System.Object)">
            <summary>
            获取常量表达式，自动转换值的类型
            </summary>
            <param name="expression">表达式</param>
            <param name="value">值</param>
        </member>
        <member name="M:HuCheng.Util.Core.Lambdas.Lambda.GetCriteriaCount(System.Linq.Expressions.LambdaExpression)">
            <summary>
            获取谓词条件的个数
            </summary>
            <param name="expression">谓词表达式,范例：t => t.Name == "A"</param>
        </member>
        <member name="M:HuCheng.Util.Core.Lambdas.Lambda.Equal``1(System.String,System.Object)">
            <summary>
            创建等于运算lambda表达式
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="propertyName">属性名</param>
            <param name="value">值</param>
        </member>
        <member name="M:HuCheng.Util.Core.Lambdas.Lambda.CreateParameter``1">
            <summary>
            创建参数
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Lambdas.Lambda.NotEqual``1(System.String,System.Object)">
            <summary>
            创建不等于运算lambda表达式
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="propertyName">属性名</param>
            <param name="value">值</param>
        </member>
        <member name="M:HuCheng.Util.Core.Lambdas.Lambda.Greater``1(System.String,System.Object)">
            <summary>
            创建大于运算lambda表达式
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="propertyName">属性名</param>
            <param name="value">值</param>
        </member>
        <member name="M:HuCheng.Util.Core.Lambdas.Lambda.Less``1(System.String,System.Object)">
            <summary>
            创建小于运算lambda表达式
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="propertyName">属性名</param>
            <param name="value">值</param>
        </member>
        <member name="M:HuCheng.Util.Core.Lambdas.Lambda.GreaterEqual``1(System.String,System.Object)">
            <summary>
            创建大于等于运算lambda表达式
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="propertyName">属性名</param>
            <param name="value">值</param>
        </member>
        <member name="M:HuCheng.Util.Core.Lambdas.Lambda.LessEqual``1(System.String,System.Object)">
            <summary>
            创建小于等于运算lambda表达式
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="propertyName">属性名</param>
            <param name="value">值</param>
        </member>
        <member name="M:HuCheng.Util.Core.Lambdas.Lambda.Contains``1(System.String,System.Object)">
            <summary>
            调用Contains方法
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="propertyName">属性名</param>
            <param name="value">值</param>
        </member>
        <member name="M:HuCheng.Util.Core.Lambdas.Lambda.Call``1(System.String,System.String,System.Object)">
            <summary>
            调用方法
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Lambdas.Lambda.Starts``1(System.String,System.String)">
            <summary>
            调用StartsWith方法
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="propertyName">属性名</param>
            <param name="value">值</param>
        </member>
        <member name="M:HuCheng.Util.Core.Lambdas.Lambda.Ends``1(System.String,System.String)">
            <summary>
            调用EndsWith方法
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="propertyName">属性名</param>
            <param name="value">值</param>
        </member>
        <member name="M:HuCheng.Util.Core.Lambdas.Lambda.ParsePredicate``1(System.String,System.Object,HuCheng.Util.Core.Expressions.Operator)">
            <summary>
            解析为谓词表达式
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="propertyName">属性名</param>
            <param name="value">值</param>
            <param name="operator">运算符</param>
        </member>
        <member name="M:HuCheng.Util.Core.Lambdas.Lambda.ParsePredicate``1(System.String,System.Object[])">
            <summary>
            解析为谓词表达式
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="predicateExpression">谓词表达式字符串,参数占位符为@0,@1,@2 ...</param>
            <param name="values">值</param>
        </member>
        <member name="T:HuCheng.Util.Core.Lambdas.ParameterRebinder">
            <summary>
            参数重绑定操作
            </summary>
        </member>
        <member name="F:HuCheng.Util.Core.Lambdas.ParameterRebinder._map">
            <summary>
            参数字典
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Lambdas.ParameterRebinder.#ctor(System.Collections.Generic.Dictionary{System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.ParameterExpression})">
            <summary>
            初始化参数重绑定操作
            </summary>
            <param name="map">参数字典</param>
        </member>
        <member name="M:HuCheng.Util.Core.Lambdas.ParameterRebinder.ReplaceParameters(System.Collections.Generic.Dictionary{System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression)">
            <summary>
            替换参数
            </summary>
            <param name="map">参数字典</param>
            <param name="exp">表达式</param>
        </member>
        <member name="M:HuCheng.Util.Core.Lambdas.ParameterRebinder.VisitParameter(System.Linq.Expressions.ParameterExpression)">
            <summary>
            访问参数
            </summary>
            <param name="parameterExpression">参数</param>
        </member>
        <member name="T:HuCheng.Util.Core.Object.INullObject">
            <summary>
            空对象
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Object.INullObject.IsNull">
            <summary>
            是否空对象
            </summary>
        </member>
        <member name="T:HuCheng.Util.Core.Object.NullObject">
            <summary>
            空对象
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Object.NullObject.IsNull">
            <summary>
            是否空对象
            </summary>
        </member>
        <member name="T:HuCheng.Util.Core.Object.Reflection">
            <summary>
            反射操作
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Object.Reflection.GetAssembly(System.String)">
            <summary>
            获取程序集
            </summary>
            <param name="assemblyName">程序集名称</param>
        </member>
        <member name="M:HuCheng.Util.Core.Object.Reflection.GetDescription``1(System.String)">
            <summary>
            获取描述
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="memberName">成员名称</param>
        </member>
        <member name="M:HuCheng.Util.Core.Object.Reflection.GetDescription(System.Type,System.String)">
            <summary>
            获取描述
            </summary>
            <param name="type">类型</param>
            <param name="memberName">成员名称</param>
        </member>
        <member name="M:HuCheng.Util.Core.Object.Reflection.GetDescription(System.Type,System.Reflection.FieldInfo)">
            <summary>
            获取描述
            </summary>
            <param name="type">类型</param>
            <param name="field">成员</param>
        </member>
        <member name="M:HuCheng.Util.Core.Object.Reflection.CreateInstance``1(System.String,System.Object[])">
            <summary>
            动态创建实例
            </summary>
            <typeparam name="T">目标类型</typeparam>
            <param name="className">类名，包括命名空间,如果类型不处于当前执行程序集中，需要包含程序集名，范例：Test.Core.Test2,Test.Core</param>
            <param name="parameters">传递给构造函数的参数</param>        
        </member>
        <member name="M:HuCheng.Util.Core.Object.Reflection.CreateInstance``1(System.Type,System.Object[])">
            <summary>
            动态创建实例
            </summary>
            <typeparam name="T">目标类型</typeparam>
            <param name="type">类型</param>
            <param name="parameters">传递给构造函数的参数</param>        
        </member>
        <member name="M:HuCheng.Util.Core.Object.Reflection.IsBool(System.Reflection.MemberInfo)">
            <summary>
            是否布尔类型
            </summary>
            <param name="member">成员</param>
        </member>
        <member name="M:HuCheng.Util.Core.Object.Reflection.IsBool(System.Reflection.PropertyInfo)">
            <summary>
            是否布尔类型
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Object.Reflection.IsEnum(System.Reflection.MemberInfo)">
            <summary>
            是否枚举类型
            </summary>
            <param name="member">成员</param>
        </member>
        <member name="M:HuCheng.Util.Core.Object.Reflection.IsEnum(System.Reflection.PropertyInfo)">
            <summary>
            是否枚举类型
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Object.Reflection.IsDate(System.Reflection.MemberInfo)">
            <summary>
            是否日期类型
            </summary>
            <param name="member">成员</param>
        </member>
        <member name="M:HuCheng.Util.Core.Object.Reflection.IsDate(System.Reflection.PropertyInfo)">
            <summary>
            是否日期类型
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Object.Reflection.IsInt(System.Reflection.MemberInfo)">
            <summary>
            是否整型
            </summary>
            <param name="member">成员</param>
        </member>
        <member name="M:HuCheng.Util.Core.Object.Reflection.IsInt(System.Reflection.PropertyInfo)">
            <summary>
            是否整型
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Object.Reflection.IsNumber(System.Reflection.MemberInfo)">
            <summary>
            是否数值类型
            </summary>
            <param name="member">成员</param>
        </member>
        <member name="M:HuCheng.Util.Core.Object.Reflection.IsNumber(System.Reflection.PropertyInfo)">
            <summary>
            是否整型
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Object.Reflection.GetByInterface``1(System.Reflection.Assembly)">
            <summary>
            获取实现了接口的所有具体类型
            </summary>
            <typeparam name="T">接口类型</typeparam>
            <param name="assembly">在该程序集中查找</param>
        </member>
        <member name="M:HuCheng.Util.Core.Object.Reflection.GetAssemblies(System.String)">
            <summary>
            从目录中获取所有程序集
            </summary>
            <param name="directoryPath">目录绝对路径</param>
        </member>
        <member name="T:HuCheng.Util.Core.Expressions.Operator">
            <summary>
            操作符
            </summary>
        </member>
        <member name="F:HuCheng.Util.Core.Expressions.Operator.Equal">
            <summary>
            等于
            </summary>
        </member>
        <member name="F:HuCheng.Util.Core.Expressions.Operator.NotEqual">
            <summary>
            不等于
            </summary>
        </member>
        <member name="F:HuCheng.Util.Core.Expressions.Operator.Greater">
            <summary>
            大于
            </summary>
        </member>
        <member name="F:HuCheng.Util.Core.Expressions.Operator.Less">
            <summary>
            小于
            </summary>
        </member>
        <member name="F:HuCheng.Util.Core.Expressions.Operator.GreaterEqual">
            <summary>
            大于等于
            </summary>
        </member>
        <member name="F:HuCheng.Util.Core.Expressions.Operator.LessEqual">
            <summary>
            小于等于
            </summary>
        </member>
        <member name="F:HuCheng.Util.Core.Expressions.Operator.Contains">
            <summary>
            头尾匹配
            </summary>
        </member>
        <member name="F:HuCheng.Util.Core.Expressions.Operator.Starts">
            <summary>
            头匹配
            </summary>
        </member>
        <member name="F:HuCheng.Util.Core.Expressions.Operator.Ends">
            <summary>
            尾匹配
            </summary>
        </member>
        <member name="T:HuCheng.Util.Core.Encrypts.Md5Encrypt">
            <summary>
            MD5加密类,注意经MD5加密过的信息是不能转换回原始数据的
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Encrypts.Md5Encrypt.Md5By16(System.String)">
            <summary>
            Md5加密，返回16位结果
            </summary>
            <param name="text">待加密字符串</param>
        </member>
        <member name="M:HuCheng.Util.Core.Encrypts.Md5Encrypt.Md5By16(System.String,System.Text.Encoding)">
            <summary>
            Md5加密，返回16位结果
            </summary>
            <param name="text">待加密字符串</param>
            <param name="encoding">字符编码</param>
        </member>
        <member name="M:HuCheng.Util.Core.Encrypts.Md5Encrypt.Md5(System.String,System.Text.Encoding,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Md5加密
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.Encrypts.Md5Encrypt.Md5By32(System.String)">
            <summary>
            Md5加密，返回32位结果
            </summary>
            <param name="text">待加密字符串</param>
        </member>
        <member name="M:HuCheng.Util.Core.Encrypts.Md5Encrypt.Md5By32(System.String,System.Text.Encoding)">
            <summary>
            Md5加密，返回32位结果
            </summary>
            <param name="text">待加密字符串</param>
            <param name="encoding">字符编码</param>
        </member>
        <member name="T:HuCheng.Util.Core.SystemOpera.Sys">
            <summary>
            系统操作
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.SystemOpera.Sys.Line">
            <summary>
            换行符
            </summary>
        </member>
        <member name="P:HuCheng.Util.Core.SystemOpera.Sys.Guid">
            <summary>
            Guid
            </summary>
        </member>
        <member name="M:HuCheng.Util.Core.SystemOpera.Sys.GetType``1">
            <summary>
            获取类型,对可空类型进行处理
            </summary>
            <typeparam name="T">类型</typeparam>
        </member>
        <member name="M:HuCheng.Util.Core.SystemOpera.Sys.GetPhysicalPath(System.String)">
            <summary>
            获取物理路径
            </summary>
            <param name="relativePath">相对路径</param>
        </member>
        <member name="M:HuCheng.Util.Core.SystemOpera.Sys.StartProcess(System.String)">
            <summary>
            启动进程
            </summary>
            <param name="processName">进程名称</param>
        </member>
    </members>
</doc>
